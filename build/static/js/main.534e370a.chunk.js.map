{"version":3,"sources":["components/Sidebar/Sidebar.tsx","components/Footer/Footer.tsx","components/Top/Top.tsx","components/SqlFormatter/SqlFormatter.tsx","components/JsonFormatter/JsonFormatter.tsx","components/Qrcode/Qrcode.tsx","components/DummySVG/DummySVG.tsx","components/App/NotFound.tsx","components/App/App.tsx","registerServiceWorker.ts","stores/RouterStore.ts","stores/SqlFormatterStore.ts","stores/SqlCodeMirrorStore.ts","stores/JsonFormatterStore.ts","stores/JsonCodeMirrorStore.ts","stores/QrcodeStore.ts","stores/DummySVGStore.ts","index.tsx"],"names":["Sidebar","inject","router","this","props","react","Menu","size","fixed","vertical","inverted","Item","header","name","route","top","path","active","isActive","onClick","goTo","Icon","sqlFormatter","jsonFormatter","qrcode","dummySVG","href","target","React","Footer","Segment","basic","textAlign","Top","observer","Header","as","icon","Content","Subheader","dividing","List","divided","relaxed","verticalAlign","Link","to","Description","SqlFormatter","_ref","sqlCodeMirror","Form","Group","widths","TextArea","label","value","text","placeholder","onChange","format","Select","options","modes","mode","setOptions","react_codemirror2","sql","onBeforeChange","changeSql","JsonFormatter","indentChange","e","_this","setIndent","jsonCodeMirror","indents","indent","json","changeJson","Qrcode","clickFile","file","click","setFile","document","getElementById","setCanvas","toCanvas","addFileReadEventListener","Message","warning","compact","Input","changeText","width","type","min","widthMin","max","widthMax","changeWidth","margin","marginMin","marginMax","changeMargin","dark","pattern","colorPattern","changeDark","light","changeLight","Divider","hidden","inline","iconScale","step","iconScaleStep","iconScaleMin","iconScaleMax","changeIconScale","Button","primary","uploadedFile","concat","id","resetAction","Or","positive","disabled","Boolean","DummySVG","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","timer","svgHTML","src","inputWidth","inputHeight","inputFontSize","svg","canvas","onFocus","current","children","addEventListener","select","setSVGHTML","innerHTML","drawImage","ctx","getContext","btoa","unescape","encodeURIComponent","img","Image","onload","imageSmoothingQuality","forceUpdate","download","a","createElement","toDataURL","background","body","appendChild","removeChild","componentDidUpdate","_this2","window","clearTimeout","setTimeout","Ref","innerRef","height","changeHeight","changeBackground","color","changeColor","fontSize","changeFontSize","fontFamily","changeFontFamily","ref","xmlns","fill","textAnchor","x","y","dy","className","NotFound","App","Router","history","components_Sidebar_Sidebar","Switch","Route","exact","component","components_Footer_Footer","isLocalhost","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","RouterStore","action","bound","createBrowserHistory","title","changeTitle","listen","hasOwnProperty","pathname","event","push","String","SqlFormatterStore","defaultText","initializerDefineProperty","_descriptor","_descriptor2","localStorageKey","getText","setText","setSql","sqlFormat","localStorage","getItem","setItem","split","join","setlocalStorage","editor","data","observable","SqlCodeMirrorStore","SqlCodeMirrorStore_descriptor","key","getMode","setMode","lineNumbers","theme","JsonFormatterStore","JsonFormatterStore_descriptor","JsonFormatterStore_descriptor2","_descriptor3","localStorageKeyForIndet","localStorageKeyForText","getIndent","_setIndent","setJson","stringify","isParsed","parsed","JSON","parse","message","castIndent","Number","setTextlocalStorage","_ref2","setIndentlocalStorage","JsonCodeMirrorStore","indentUnit","indentWithTabs","setIndentUnit","setIndentWithTabs","QrcodeStore","QrcodeStore_descriptor","QrcodeStore_descriptor2","QrcodeStore_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","textDefault","widthDefault","marginDefault","darkDefault","lightDefault","iconScaleDefault","deleteMessage","reset","isHexadecimal","length","parseInt","setWidth","setMargin","setDark","setLight","setIconScale","resetIcon","indexOf","URL","createObjectURL","context","dw","dh","getIconScale","Math","ceil","QRCode","getWidth","getMargin","toSJISFunc","toSJIS","getDarkColor","getLightColor","drawIcon","files","loadImg","confirm","DummySVGStore","DummySVGStore_descriptor","DummySVGStore_descriptor2","DummySVGStore_descriptor3","DummySVGStore_descriptor4","DummySVGStore_descriptor5","DummySVGStore_descriptor6","DummySVGStore_descriptor7","setTextFromSize","setHeight","_ref3","setBackground","_ref4","setColor","_ref5","_ref6","setFontSize","_ref7","setFontFamily","stores","provider","index_module","components_App_App","ReactDOM","process","toString","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.534e370a.chunk.js","sourcesContent":["// 型定義のため\nimport RoutesStore from '../../stores/RouterStore';\n\nimport * as React from 'react';\nimport {\n  inject,\n  // observer,\n} from 'mobx-react';\nimport {\n  Menu,\n  Icon,\n} from 'semantic-ui-react';\n\ninterface Iprops {\n  router: RoutesStore;\n}\n\n@inject('router')\n// @observer\nclass Sidebar extends React.Component {\n  render() {\n    const {\n      router,\n    } = this.props as Iprops;\n\n    return (\n      <Menu size=\"small\" fixed=\"left\" vertical={true} inverted={true}>\n        <Menu.Item header={true}>\n          Utility\n        </Menu.Item>\n        <Menu.Item name={router.route.top.path} active={router.isActive(router.route.top.path)} onClick={router.goTo}>\n          <Icon name=\"home\" />TOP\n        </Menu.Item>\n        <Menu.Item name={router.route.sqlFormatter.path} active={router.isActive(router.route.sqlFormatter.path)} onClick={router.goTo}>\n          <Icon name=\"code\" />SQL format\n        </Menu.Item>\n        <Menu.Item name={router.route.jsonFormatter.path} active={router.isActive(router.route.jsonFormatter.path)} onClick={router.goTo}>\n          <Icon name=\"code\" />JSON format\n        </Menu.Item>\n        <Menu.Item name={router.route.qrcode.path} active={router.isActive(router.route.qrcode.path)} onClick={router.goTo}>\n          <Icon name=\"qrcode\" />QRCode\n        </Menu.Item>\n        <Menu.Item name={router.route.dummySVG.path} active={router.isActive(router.route.dummySVG.path)} onClick={router.goTo}>\n          <Icon name=\"image\" />Dummy SVG\n        </Menu.Item>\n        <Menu.Item href=\"https://plantuml-editor.kkeisuke.com/\" target=\"_blank\">\n          <Icon name=\"external\" />PlantUML Editor\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default Sidebar;\n","import * as React from 'react';\nimport {\n  Segment,\n  Icon,\n} from 'semantic-ui-react';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <Segment basic={true} textAlign=\"right\">\n        <a href=\"https://github.com/kkeisuke/utility\" target=\"_blank\"><Icon name=\"github\" size=\"big\" /></a>\n        <a href=\"https://twitter.com/kkeisuke\" target=\"_blank\"><Icon name=\"twitter\" size=\"big\" /></a>\n        <a href=\"http://kkeisuke.com/\" target=\"_blank\"><Icon name=\"home\" size=\"big\" /></a>\n      </Segment>\n    );\n  }\n}\n\nexport default Footer;\n","// 型定義のため\nimport RoutesStore from '../../stores/RouterStore';\n\nimport * as React from 'react';\nimport {\n  Link,\n} from 'react-router-dom';\nimport {\n  inject,\n  observer,\n} from 'mobx-react';\nimport {\n  Header,\n  Segment,\n  List,\n  Icon\n} from 'semantic-ui-react';\n\ninterface Iprops {\n  router: RoutesStore;\n}\n\n@inject('router')\n@observer\nclass Top extends React.Component {\n  render() {\n    const {\n      router,\n    } = this.props as Iprops;\n\n    return (\n      <Segment basic={true}>\n        <Header as=\"h1\" icon={true} textAlign=\"center\">\n          <Header.Content>\n            Utility\n          </Header.Content>\n          <Header.Subheader>\n            utility.kkeisuke.com\n          </Header.Subheader>\n        </Header>\n        <Header as=\"h2\" dividing={true}>Introduction</Header>\n        <Segment basic={true}>\n          utility tools by <a href=\"http://kkeisuke.com\" target=\"_blank\">kkeisuke.com</a>\n        </Segment>\n        <Header as=\"h2\" dividing={true}>Contents</Header>\n        <Segment basic={true}>\n          <List divided={true} size=\"large\" relaxed=\"very\">\n            <List.Item>\n              <List.Icon name=\"code\" size=\"large\" verticalAlign=\"middle\" />\n              <List.Content>\n                <List.Header>\n                  <Link to={router.route.sqlFormatter.path}>SQL format</Link>\n                </List.Header>\n                <List.Description>\n                  pretty-printing SQL queries. <a href=\"https://github.com/zeroturnaround/sql-formatter\" target=\"_blank\">zeroturnaround/sql-formatter <Icon name=\"external\" size=\"small\" /></a>.\n                </List.Description>\n              </List.Content>\n            </List.Item>\n            <List.Item>\n              <List.Icon name=\"code\" size=\"large\" verticalAlign=\"middle\" />\n              <List.Content>\n                <List.Header>\n                  <Link to={router.route.jsonFormatter.path}>JSON format</Link>\n                </List.Header>\n                <List.Description>\n                  pretty-printing JSON. <a href=\"https://stackoverflow.com/questions/4810841/how-can-i-pretty-print-json-using-javascript\" target=\"_blank\">stackoverflow.com <Icon name=\"external\" size=\"small\" /></a>\n                </List.Description>\n              </List.Content>\n            </List.Item>\n            <List.Item>\n              <List.Icon name=\"qrcode\" size=\"large\" verticalAlign=\"middle\" />\n              <List.Content>\n                <List.Header>\n                  <Link to={router.route.qrcode.path}>QRCode</Link>\n                </List.Header>\n                <List.Description>\n                  qr code generator. <a href=\"https://github.com/soldair/node-qrcode\" target=\"_blank\">soldair/node-qrcode <Icon name=\"external\" size=\"small\" /></a>\n                </List.Description>\n              </List.Content>\n            </List.Item>\n            <List.Item>\n              <List.Icon name=\"image\" size=\"large\" verticalAlign=\"middle\" />\n              <List.Content>\n                <List.Header>\n                  <Link to={router.route.dummySVG.path}>Dummy SVG</Link>\n                </List.Header>\n              </List.Content>\n            </List.Item>\n          </List>\n        </Segment>\n        <Header as=\"h2\">Others</Header>\n        <Segment basic={true}>\n          <List divided={true} size=\"large\">\n            <List.Item>\n              <List.Icon name=\"code\" size=\"large\" verticalAlign=\"middle\" />\n              <List.Content>\n                <List.Header>\n                  <a href=\"https://plantuml-editor.kkeisuke.com/\" target=\"_blank\">\n                    PlantUML Editor <Icon name=\"external\" />\n                  </a>\n                </List.Header>\n                <List.Description>\n                  PlantUML online demo client\n                </List.Description>\n              </List.Content>\n            </List.Item>\n          </List>\n        </Segment>\n        <Header as=\"h2\" dividing={true}>GitHub</Header>\n        <Segment basic={true}>\n          <List size=\"large\">\n            <List.Item>\n              <List.Icon name=\"github\" size=\"large\" />\n              <List.Content verticalAlign=\"middle\">\n                <a href=\"https://github.com/kkeisuke/utility\" target=\"_blank\">https://github.com/kkeisuke/utility <Icon name=\"external\" size=\"small\" /></a>\n              </List.Content>\n            </List.Item>\n          </List>\n        </Segment>\n      </Segment>\n    );\n  }\n}\n\nexport default Top;\n","// 型定義のため\nimport SqlFormatterStore from '../../stores/SqlFormatterStore';\nimport SqlCodeMirrorStore from '../../stores/SqlCodeMirrorStore';\n\nimport * as React from 'react';\nimport {\n  inject,\n  observer,\n} from 'mobx-react';\nimport {\n  Header,\n  Segment,\n  Form,\n  Icon,\n} from 'semantic-ui-react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\n\nimport './SqlFormatter.css';\n\ninterface Iprops {\n  sqlFormatter: SqlFormatterStore;\n  sqlCodeMirror: SqlCodeMirrorStore;\n}\n\n@inject('sqlFormatter')\n@inject('sqlCodeMirror')\n@observer\nclass SqlFormatter extends React.Component {\n  render() {\n    const {\n      sqlFormatter,\n      sqlCodeMirror,\n    } = this.props as Iprops;\n\n    return (\n      <Segment basic={true}>\n        <Header as=\"h1\" dividing={true}>\n          <Icon name=\"code\" />SQL format\n        </Header>\n        <Form>\n          <Form.Group widths=\"equal\">\n            <Form.TextArea label=\"SQL\" value={sqlFormatter.text} placeholder=\"paste unformatted SQL\" onChange={sqlFormatter.format} />\n          </Form.Group>\n          <Form.Group>\n            <Form.Select label=\"mode\" options={sqlCodeMirror.modes} value={sqlCodeMirror.options.mode} onChange={sqlCodeMirror.setOptions} />\n          </Form.Group>\n        </Form>\n        <CodeMirror value={sqlFormatter.sql} onBeforeChange={sqlFormatter.changeSql} options={sqlCodeMirror.options} />\n      </Segment>\n    );\n  }\n}\n\nexport default SqlFormatter;\n","// 型定義のため\nimport JsonFormatterStore from '../../stores/JsonFormatterStore';\nimport JsonCodeMirrorStore from '../../stores/JsonCodeMirrorStore';\nimport {\n  DropdownProps,\n} from 'semantic-ui-react';\n\nimport * as React from 'react';\nimport {\n  inject,\n  observer,\n} from 'mobx-react';\nimport {\n  Header,\n  Segment,\n  Form,\n  Icon,\n} from 'semantic-ui-react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\n\nimport './JsonFormatter.css';\n\ninterface Iprops {\n  jsonFormatter: JsonFormatterStore;\n  jsonCodeMirror: JsonCodeMirrorStore;\n}\n\n@inject('jsonFormatter')\n@inject('jsonCodeMirror')\n@observer\nclass JsonFormatter extends React.Component<Iprops> {\n\n  indentChange = (e: React.FormEvent<HTMLElement>, props: DropdownProps) => {\n    this.props.jsonFormatter.setIndent(e, props);\n    this.props.jsonCodeMirror.setIndent(e, props);\n  }\n\n  render() {\n    const {\n      jsonFormatter,\n      jsonCodeMirror,\n    } = this.props as Iprops;\n\n    return (\n      <Segment basic={true}>\n        <Header as=\"h1\" dividing={true}>\n          <Icon name=\"code\" />JSON format\n        </Header>\n        <Form>\n          <Form.Group widths=\"equal\">\n            <Form.TextArea label=\"JSON\" value={jsonFormatter.text} placeholder=\"paste unformatted JSON\" onChange={jsonFormatter.format} />\n          </Form.Group>\n          <Form.Group>\n            <Form.Select label=\"indent\" options={jsonFormatter.indents} value={jsonFormatter.indent} onChange={this.indentChange} />\n          </Form.Group>\n        </Form>\n        <CodeMirror value={jsonFormatter.json} onBeforeChange={jsonFormatter.changeJson} options={jsonCodeMirror.options} />\n      </Segment>\n    );\n  }\n}\n\nexport default JsonFormatter;\n","// 型定義のため\nimport QrcodeStore from '../../stores/QrcodeStore';\n\nimport * as React from 'react';\nimport {\n  inject,\n  observer,\n} from 'mobx-react';\nimport {\n  Header,\n  Segment,\n  Form,\n  Icon,\n  Button,\n  Divider,\n  Message,\n} from 'semantic-ui-react';\n\nimport './Qrcode.css';\n\ninterface Iprops {\n  qrcode: QrcodeStore;\n}\n\n@inject('qrcode')\n@observer\nclass Qrcode extends React.Component<Iprops> {\n\n  componentDidMount() {\n    const {\n      qrcode,\n    } = this.props as Iprops;\n\n    qrcode.setFile(document.getElementById('file') as HTMLInputElement);\n    qrcode.setCanvas(document.getElementById('canvas') as HTMLCanvasElement);\n    qrcode.toCanvas();\n    qrcode.addFileReadEventListener();\n  }\n\n  clickFile = () => {\n    if (this.props.qrcode.file) {\n      this.props.qrcode.file.click();\n    }\n  }\n\n  render() {\n    const {\n      qrcode,\n    } = this.props as Iprops;\n\n    return (\n      <Segment basic={true}>\n        <Header as=\"h1\" dividing={true}>\n          <Icon name=\"qrcode\" />QRCode\n        </Header>\n        <Message warning={true} compact={true} size=\"small\">\n          <p>Recommended browsers are Chrome and Safari</p>\n        </Message>\n        <Form>\n          <Form.Group>\n            <Form.Input label=\"text\" value={qrcode.text} onChange={qrcode.changeText} width={8} />\n          </Form.Group>\n          <Form.Group>\n            <Form.Input label=\"width\" value={qrcode.width} type=\"number\" min={qrcode.widthMin} max={qrcode.widthMax} onChange={qrcode.changeWidth} width={2} />\n            <Form.Input label=\"margin\" value={qrcode.margin} type=\"number\" min={qrcode.marginMin} max={qrcode.marginMax} onChange={qrcode.changeMargin} width={2} />\n            <Form.Input label=\"color dark\" value={qrcode.dark} pattern={qrcode.colorPattern} onChange={qrcode.changeDark} width={2} />\n            <Form.Input label=\"color light\" value={qrcode.light} pattern={qrcode.colorPattern} onChange={qrcode.changeLight} width={2} />\n          </Form.Group>\n          <Divider hidden={true} />\n          <Form.Group inline={true}>\n            <Form.Input label=\"icon scale\" value={qrcode.iconScale} type=\"number\" step={qrcode.iconScaleStep} min={qrcode.iconScaleMin} max={qrcode.iconScaleMax} onChange={qrcode.changeIconScale} />\n            <Button type=\"button\" onClick={this.clickFile} primary={true}>add icon</Button>　{qrcode.uploadedFile ? qrcode.uploadedFile.name : ''} {qrcode.uploadedFile ? `( ${qrcode.uploadedFile.type} )` : ''}\n            <input type=\"file\" id=\"file\" />\n          </Form.Group>\n          <Divider hidden={true} />\n          <Form.Group inline={true}>\n            <Button.Group>\n              <Button type=\"button\" onClick={qrcode.resetAction}>Reset</Button>\n              <Button.Or />\n              <Button type=\"button\" positive={true} onClick={qrcode.toCanvas} disabled={!Boolean(qrcode.text)} >Create</Button>\n            </Button.Group>\n          </Form.Group>\n        </Form>\n        <Divider hidden={true} />\n        <Segment compact={true}>\n          <canvas id=\"canvas\" />\n        </Segment>\n      </Segment>\n    );\n  }\n}\n\nexport default Qrcode;\n","// 型定義のため\nimport DummySVGStore from '../../stores/DummySVGStore';\n\nimport * as React from 'react';\nimport {\n  inject,\n  observer,\n} from 'mobx-react';\nimport {\n  Header,\n  Segment,\n  Form,\n  Icon,\n  Divider,\n  Button,\n  Ref,\n} from 'semantic-ui-react';\n\nimport './DummySVG.css';\n\ninterface Iprops {\n  dummySVG: DummySVGStore;\n}\n\n@inject('dummySVG')\n@observer\nclass DummySVG extends React.Component<Iprops> {\n\n  timer: number = 0;\n  svgHTML: string = '';\n  src: string = '';\n  href: string = '';\n  inputWidth: React.RefObject<HTMLDivElement>;\n  inputHeight: React.RefObject<HTMLDivElement>;\n  inputFontSize: React.RefObject<HTMLDivElement>;\n  svg: React.RefObject<HTMLDivElement>;\n  canvas: React.RefObject<HTMLCanvasElement>;\n\n  constructor(props: Iprops) {\n    super(props);\n    this.inputWidth = React.createRef();\n    this.inputHeight = React.createRef();\n    this.inputFontSize = React.createRef();\n    this.svg = React.createRef();\n    this.canvas = React.createRef();\n  }\n\n  componentDidMount() {\n    this.onFocus();\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    if (this.timer) {\n      window.clearTimeout(this.timer);\n    }\n    this.timer = window.setTimeout(() => {\n      this.setSVGHTML();\n      this.drawImage();\n    }, 500);\n  }\n\n  componentWillUnmount() {\n    window.clearTimeout(this.timer);\n  }\n\n  onFocus = () => {\n    if (this.inputWidth.current && this.inputWidth.current.children[1]) {\n      const inputWidth = this.inputWidth.current.children[1].children[0] as HTMLInputElement;\n      inputWidth.addEventListener('focus', () => {\n        inputWidth.select();\n      });\n    }\n    if (this.inputHeight.current && this.inputHeight.current.children[1]) {\n      const inputHeight = this.inputHeight.current.children[1].children[0] as HTMLInputElement;\n      inputHeight.addEventListener('focus', () => {\n        inputHeight.select();\n      });\n    }\n    if (this.inputFontSize.current && this.inputFontSize.current.children[1]) {\n      const inputFontSize = this.inputFontSize.current.children[1].children[0] as HTMLInputElement;\n      inputFontSize.addEventListener('focus', () => {\n        inputFontSize.select();\n      });\n    }\n  }\n\n  setSVGHTML = () => {\n    this.svgHTML = this.svg.current ? this.svg.current.innerHTML : '';\n  }\n\n  drawImage = () => {\n    const ctx = this.canvas.current ? this.canvas.current.getContext('2d') : null;\n    if (ctx) {\n      this.src = `data:image/svg+xml;charset=utf-8;base64,${btoa(unescape(encodeURIComponent(this.svgHTML)))}`;\n      const img = new Image();\n      img.src = this.src;\n      img.onload = () => {\n        ctx.imageSmoothingQuality = 'high';\n        ctx.drawImage(img, 0, 0);\n        this.forceUpdate();\n      };\n    }\n  }\n\n  download = () => {\n    const {\n      dummySVG,\n    } = this.props as Iprops;\n\n    const a = document.createElement('a');\n    this.href = this.canvas.current ? this.canvas.current.toDataURL('image/png') : '';\n    a.href = this.href;\n    a.download = `${dummySVG.text || dummySVG.background}.png`;\n    document.body.appendChild(a); // for firefox\n    a.click();\n    document.body.removeChild(a); // for firefox\n  }\n\n  render() {\n    const {\n      dummySVG,\n    } = this.props as Iprops;\n\n    return (\n      <Segment basic={true}>\n        <Header as=\"h1\" dividing={true}>\n          <Icon name=\"image\" />Dummy SVG\n        </Header>\n        <Form>\n          <Form.Group>\n            <Ref innerRef={this.inputWidth}>\n              <Form.Input label=\"width\" value={dummySVG.width} type=\"number\" onChange={dummySVG.changeWidth} width={2} />\n            </Ref>\n            <Ref innerRef={this.inputHeight}>\n              <Form.Input label=\"height\" value={dummySVG.height} type=\"number\" onChange={dummySVG.changeHeight} width={2} />\n            </Ref>\n            <Form.Input label=\"text\" value={dummySVG.text} onChange={dummySVG.changeText} width={4} />\n          </Form.Group>\n          <Form.Group>\n            <Form.Input label=\"background\" value={dummySVG.background} onChange={dummySVG.changeBackground} width={2} />\n            <Form.Input label=\"color\" value={dummySVG.color} onChange={dummySVG.changeColor} width={2} />\n          </Form.Group>\n          <Form.Group>\n            <Ref innerRef={this.inputFontSize}>\n              <Form.Input label=\"font size\" value={dummySVG.fontSize} type=\"number\" onChange={dummySVG.changeFontSize} width={2} />\n            </Ref>\n            <Form.Input label=\"font family\" value={dummySVG.fontFamily} onChange={dummySVG.changeFontFamily} width={6} />\n          </Form.Group>\n          <Form.Group inline={true}>\n            <Button positive={true} onClick={this.download} disabled={!Boolean(dummySVG.width) || !Boolean(dummySVG.height)}>download png image</Button>\n          </Form.Group>\n        </Form>\n        <Divider hidden={true} />\n        <div ref={this.svg}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width={dummySVG.width} height={dummySVG.height} fontFamily={dummySVG.fontFamily} fontSize={dummySVG.fontSize}>\n            <rect width={dummySVG.width} height={dummySVG.height} fill={`#${dummySVG.background}`}/>\n            <text textAnchor=\"middle\" x=\"50%\" y=\"50%\" dy=\".3em\" fill={`#${dummySVG.color}`}>\n              {dummySVG.text}\n            </text>\n          </svg>\n        </div>\n        <canvas ref={this.canvas} width={dummySVG.width} height={dummySVG.height} className=\"canvas\" />\n        <Divider hidden={true} />\n        <Form>\n          <Form.Group>\n            <Form.TextArea label=\"SVG\" value={this.svgHTML} width={8} />\n          </Form.Group>\n          <Form.Group>\n            <Form.TextArea label=\"data:image/svg+xml\" value={this.src} width={8} />\n          </Form.Group>\n          <Form.Group>\n            <Form.TextArea label=\"data:image/png\" value={this.href} width={8} />\n          </Form.Group>\n        </Form>\n      </Segment>\n    );\n  }\n}\n\nexport default DummySVG;\n ","import * as React from 'react';\nimport {\n  Header,\n  Segment,\n} from 'semantic-ui-react';\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <Segment basic={true}>\n        <Header as=\"h1\" dividing={true}>Not Found</Header>\n      </Segment>\n    );\n  }\n}\n\nexport default NotFound;\n","// 型定義のため\nimport RoutesStore from '../../stores/RouterStore';\n\nimport * as React from 'react';\nimport {\n  Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport {\n  inject,\n  observer,\n} from 'mobx-react';\n\nimport Sidebar from '../Sidebar/Sidebar';\nimport Footer from '../Footer/Footer';\nimport Top from '../Top/Top';\nimport SqlFormatter from '../SqlFormatter/SqlFormatter';\nimport JsonFormatter from '../JsonFormatter/JsonFormatter';\nimport Qrcode from '../Qrcode/Qrcode';\nimport DummySVG from '../DummySVG/DummySVG';\nimport NotFound from './NotFound';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/solarized.css';\nimport 'codemirror/mode/sql/sql.js';\nimport 'codemirror/mode/javascript/javascript.js';\nimport './App.css';\n\ninterface Iprops {\n  router: RoutesStore;\n}\n\n@inject('router')\n@observer\nclass App extends React.Component {\n  render() {\n    const {\n      router\n    } = this.props as Iprops;\n\n    return (\n      <Router history={router.history}>\n        <div className=\"App\">\n          <Sidebar />\n          <div className=\"main\">\n            <Switch>\n              <Route exact={true} path=\"/\" component={Top}/>\n              <Route path=\"/sql_formatter\" component={SqlFormatter}/>\n              <Route path=\"/json_formatter\" component={JsonFormatter}/>\n              <Route path=\"/qrcode\" component={Qrcode}/>\n              <Route path=\"/dummy_svg\" component={DummySVG}/>\n              <Route component={NotFound}/>\n            </Switch>\n            <Footer />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// 型定義のため\nimport { MenuItemProps } from 'semantic-ui-react';\nimport { Location } from 'history';\n\nimport {\n  // observable,\n  // computed,\n  action,\n} from 'mobx';\nimport { createBrowserHistory } from 'history';\n\nexport default class RouterStore {\n  history = createBrowserHistory();\n  route: { [ key: string ]: { path: string; title: string } } = {\n    top: {\n      path: '/',\n      title: 'Utility'\n    },\n    sqlFormatter: {\n      path: '/sql_formatter',\n      title: 'SQL format : Utility'\n    },\n    jsonFormatter: {\n      path: '/json_formatter',\n      title: 'JSON format : Utility'\n    },\n    qrcode: {\n      path: '/qrcode',\n      title: 'QRCode : Utility'\n    },\n    dummySVG: {\n      path: '/dummy_svg',\n      title: 'Dummy SVG : Utility'\n    }\n  };\n\n  constructor() {\n    this.changeTitle(this.history.location);\n    this.history.listen((location: Location) => {\n      this.changeTitle(location);\n    });\n  }\n\n  changeTitle(location: Location) {\n    for (const route in this.route) {\n      if (this.route.hasOwnProperty(route) && this.route[route].path === location.pathname) {\n        document.title = this.route[route].title;\n      }\n    }\n  }\n\n  @action.bound isActive(path: string): boolean {\n    return location.pathname === path;\n  }\n\n  @action.bound goTo(event: React.MouseEvent<HTMLElement>, {name}: MenuItemProps) {\n    this.history.push(String(name));\n  }\n}\n","// 型定義のため\nimport * as codemirror from 'codemirror';\nimport {\n  TextAreaProps,\n} from 'semantic-ui-react';\n\nimport {\n  observable,\n  // computed,\n  action,\n} from 'mobx';\nimport sqlFormatter from 'sql-formatter';\n\nexport default class SqlFormatterStore {\n  defaultText: string = '\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n';\n\n  @observable text: string = '';\n  @observable sql: string = '';\n\n  localStorageKey: string = 'sqlFormatterStore.text';\n\n  constructor() {\n    const text: string = this.getText();\n    if (text) {\n      this.setText(text);\n      this.setSql(this.sqlFormat(text));\n    } else {\n      this.setSql(this.defaultText);\n    }\n  }\n\n  getText(): string {\n    let text: string = '';\n    if (window.localStorage && window.localStorage.getItem(this.localStorageKey) !== null ) {\n      text = String(window.localStorage.getItem(this.localStorageKey));\n    }\n    return text;\n  }\n\n  setText(text: string) {\n    this.text = text;\n  }\n\n  setlocalStorage(text: string) {\n    if (window.localStorage) {\n      window.localStorage.setItem(this.localStorageKey, text);\n    }\n  }\n\n  setSql(text: string) {\n    this.sql = text || this.defaultText;\n  }\n\n  sqlFormat(text: string): string {\n    return sqlFormatter.format(text).split(';').join('\\n;\\n');\n  }\n\n  @action.bound format(e: React.FormEvent<HTMLTextAreaElement>, {value}: TextAreaProps) {\n    this.setText(String(value));\n    this.setlocalStorage(String(value));\n    this.setSql(this.sqlFormat(String(value)));\n  }\n\n  @action.bound changeSql(editor: codemirror.Editor, data: codemirror.EditorChange, value: string) {\n    this.setSql(value);\n  }\n}\n","// 型定義のため\nimport {\n  DropdownProps,\n  DropdownItemProps,\n} from 'semantic-ui-react';\nimport * as codemirror from 'codemirror';\n\nimport {\n  observable,\n  action,\n} from 'mobx';\n\nexport default class SqlCodeMirrorStore {\n  @observable options: codemirror.EditorConfiguration = {\n    lineNumbers: true,\n    mode: 'text/x-sql',\n    theme: 'solarized dark',\n  };\n\n  modes: DropdownItemProps[] = [\n    {\n      key: 'sql',\n      text: 'text/x-sql',\n      value: 'text/x-sql',\n    },\n    {\n      key: 'mysql',\n      text: 'text/x-mysql',\n      value: 'text/x-mysql',\n    },\n    {\n      key: 'mssql',\n      text: 'text/x-mssql',\n      value: 'text/x-mssql',\n    },\n    {\n      key: 'pgsql',\n      text: 'text/x-pgsql',\n      value: 'text/x-pgsql',\n    },\n  ];\n\n  localStorageKey: string = 'sqlCodeMirrorStore.options.mode';\n\n  constructor() {\n    const mode: string = this.getMode();\n    if (mode) {\n      this.setMode(mode);\n    }\n  }\n\n  getMode(): string {\n    let mode: string = '';\n    if (window.localStorage && window.localStorage.getItem(this.localStorageKey) !== null ) {\n      mode = String(window.localStorage.getItem(this.localStorageKey));\n    }\n    return mode;\n  }\n\n  setMode(value: string) {\n    this.options.mode = value;\n  }\n\n  setlocalStorage(value: string) {\n    if (window.localStorage) {\n      window.localStorage.setItem(this.localStorageKey, value);\n    }\n  }\n\n  @action.bound setOptions(e: React.FormEvent<HTMLElement>, {value}: DropdownProps) {\n    this.setMode(String(value));\n    this.setlocalStorage(String(value));\n  }\n}\n","// 型定義のため\nimport * as codemirror from 'codemirror';\nimport {\n  DropdownProps,\n  TextAreaProps,\n  DropdownItemProps,\n} from 'semantic-ui-react';\n\nimport {\n  observable,\n  // computed,\n  action,\n} from 'mobx';\n\nexport default class JsonFormatterStore {\n  defaultText: string = '\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n';\n\n  @observable indent: string = '2'; // '\\t'\n  @observable text: string = '';\n  @observable json: string = '';\n\n  indents: DropdownItemProps[] = [\n    {\n      key: 'space2',\n      text: 'space 2',\n      value: '2',\n    },\n    {\n      key: 'space4',\n      text: 'space 4',\n      value: '4',\n    },\n    {\n      key: 'tab',\n      text: 'tab',\n      value: '\\t',\n    },\n  ];\n\n  localStorageKeyForIndet: string = 'jsonFormatterStore.indent';\n  localStorageKeyForText: string = 'jsonFormatterStore.text';\n\n  constructor() {\n    const indent: string = this.getIndent();\n    const text: string = this.getText();\n    if (indent) {\n      this._setIndent(indent);\n    }\n    if (text) {\n      this.setText(text);\n      this.setJson(this.stringify(text));\n    } else {\n      this.setJson(this.defaultText);\n    }\n  }\n\n  getText(): string {\n    let text: string = '';\n    if (window.localStorage && window.localStorage.getItem(this.localStorageKeyForText) !== null ) {\n      text = String(window.localStorage.getItem(this.localStorageKeyForText));\n    }\n    return text;\n  }\n\n  setText(text: string) {\n    this.text = text;\n  }\n\n  setTextlocalStorage(text: string) {\n    if (window.localStorage) {\n      window.localStorage.setItem(this.localStorageKeyForText, text);\n    }\n  }\n\n  setJson(text: string) {\n    this.json = text || this.defaultText;\n  }\n\n  getIndent(): string {\n    let indent: string = '';\n    if (window.localStorage && window.localStorage.getItem(this.localStorageKeyForIndet) !== null ) {\n      indent = String(window.localStorage.getItem(this.localStorageKeyForIndet));\n    }\n    return indent;\n  }\n\n  _setIndent(value: string) {\n    this.indent = value;\n  }\n\n  setIndentlocalStorage(text: string) {\n    if (window.localStorage) {\n      window.localStorage.setItem(this.localStorageKeyForIndet, text);\n    }\n  }\n\n  stringify(json: string) {\n    let isParsed: boolean = false;\n    let parsed: string = '';\n    try {\n      if (json) {\n        parsed = JSON.parse(json);\n        isParsed = parsed ? true : false;\n      }\n    } catch (e) {\n      parsed = `${e.name} : ${e.message}`;\n    }\n    return isParsed ? JSON.stringify(parsed, null, this.castIndent()) : parsed;\n  }\n\n  castIndent(): number|string {\n    return Number(this.indent) > 0 ? Number(this.indent) : this.indent;\n  }\n\n  @action.bound format(e: React.FormEvent<HTMLTextAreaElement>, {value}: TextAreaProps) {\n    this.setText(String(value));\n    this.setTextlocalStorage(String(value));\n    this.setJson(this.stringify(String(value)));\n  }\n\n  @action.bound setIndent(e: React.FormEvent<HTMLElement>, {value}: DropdownProps) {\n    this._setIndent(String(value));\n    this.setIndentlocalStorage(String(value));\n    this.setJson(this.stringify(this.text));\n  }\n\n  @action.bound changeJson(editor: codemirror.Editor, data: codemirror.EditorChange, value: string) {\n    this.setJson(value);\n  }\n}\n","// 型定義のため\nimport * as codemirror from 'codemirror';\nimport {\n  DropdownProps,\n} from 'semantic-ui-react';\n\nimport {\n  observable,\n  action,\n} from 'mobx';\n\nexport default class JsonCodeMirrorStore {\n  @observable options: codemirror.EditorConfiguration = {\n    lineNumbers: true,\n    mode: 'application/ld+json',\n    theme: 'solarized dark',\n    indentUnit: 2,\n    indentWithTabs: false\n  };\n\n  setIndentUnit(value: number) {\n    // タブの場合は４\n    this.options.indentUnit = value > 0 ? value : 4;\n  }\n\n  setIndentWithTabs(value: number) {\n    // タブ = true, 2, 4 = false\n    this.options.indentWithTabs = !(value > 0);\n  }\n\n  @action.bound setIndent(e: React.FormEvent<HTMLElement>, {value}: DropdownProps) {\n    this.setIndentUnit(Number(value));\n    this.setIndentWithTabs(Number(value));\n  }\n}\n","// 型定義のため\nimport { InputOnChangeData } from 'semantic-ui-react';\n\nimport {\n  observable,\n  action,\n} from 'mobx';\n\nimport QRCode from 'qrcode';\nimport toSJIS from 'qrcode/helper/to-sjis';\n\n/**\n * @TODO https://stackoverflow.com/questions/17861447/html5-canvas-drawimage-how-to-apply-antialiasing\n * context.imageSmoothingQuality = \"low|medium|high\"\n * \"It's currently only supported in Chrome.\"\n */\ninterface ChromeCanvasRenderingContext2D extends CanvasRenderingContext2D {\n  ImageSmoothingQuality: string;\n}\n\nexport default class QrcodeStore {\n  @observable text: string = '';\n  @observable width: number = 0;\n  @observable margin: number = 0;\n  @observable marginMin: number = 0;\n  @observable marginMax: number = 100;\n  @observable widthMin: number = 0;\n  @observable widthMax: number = 2000;\n  @observable dark: string = '';\n  @observable light: string = '';\n  @observable colorPattern: string = '^[0-9A-Fa-f]{3,}$';\n\n  @observable file?: HTMLInputElement;\n  @observable canvas?: HTMLCanvasElement;\n  @observable context?: ChromeCanvasRenderingContext2D;\n  @observable icon?: HTMLImageElement;\n  @observable uploadedFile?: File | null;\n  @observable iconScale: number = 0;\n  @observable iconScaleStep: number = 0.01;\n  @observable iconScaleMin: number = 0.1;\n  @observable iconScaleMax: number = 1;\n\n  textDefault: string = 'sample';\n  widthDefault: number = 200;\n  marginDefault: number = 0;\n  darkDefault: string = '000000FF';\n  lightDefault: string = 'FFFFFF00';\n  iconScaleDefault: number = 0.25;\n\n  deleteMessage: string = 'Can I reset it?';\n\n  constructor() {\n    this.reset();\n  }\n\n  setText(text: string) {\n    this.text = text;\n  }\n\n  setWidth(width: number) {\n    this.width = width;\n  }\n\n  getWidth(): number {\n    return this.width <= this.widthMax ? this.width || this.widthDefault : this.widthMax;\n  }\n\n  setMargin(margin: number) {\n    this.margin = margin;\n  }\n\n  getMargin(): number {\n    return this.margin <= this.marginMax ? this.margin || this.marginDefault : this.marginMax;\n  }\n\n  setDark(dark: string) {\n    this.dark = dark;\n  }\n\n  getDarkColor(): string {\n    return `#${this.isHexadecimal(this.dark) ? this.dark : this.darkDefault}`;\n  }\n\n  setLight(light: string) {\n    this.light = light;\n  }\n\n  getLightColor(): string {\n    return `#${this.isHexadecimal(this.light) ? this.light : this.lightDefault}`;\n  }\n\n  setIconScale(iconScale: number) {\n    this.iconScale = iconScale;\n  }\n\n  getIconScale(): number {\n    return this.iconScale <= this.iconScaleMax ? this.iconScale || this.iconScaleDefault : this.iconScaleDefault;\n  }\n\n  isHexadecimal(color: string): boolean {\n    return color.length <= 8 && color.match(this.colorPattern) !== null && Number.parseInt(color, 16) <= 4294967295;\n  }\n\n  resetIcon () {\n    if (this.file) {\n      this.file.value = '';\n    }\n    this.uploadedFile = null;\n    this.icon = new Image();\n  }\n\n  reset() {\n    this.setText(this.textDefault);\n    this.setWidth(this.widthDefault);\n    this.setMargin(this.marginDefault);\n    this.setDark(this.darkDefault);\n    this.setLight(this.lightDefault);\n    this.setIconScale(this.iconScaleDefault);\n    this.resetIcon();\n  }\n\n  loadImg(uploadedFile: File) {\n    if (!this.icon) { return; }\n    if (uploadedFile) {\n      this.uploadedFile = uploadedFile;\n      if (this.uploadedFile.type.indexOf('image/') === 0) {\n        this.icon.src = URL.createObjectURL(this.uploadedFile);\n      }\n    }\n  }\n\n  drawIcon() {\n    if (!this.icon || !this.canvas || !this.context) { return; }\n\n    let dw: number;\n    let dh: number;\n    const iconScale: number = this.getIconScale();\n\n    if (this.icon.width > this.canvas.width * iconScale) {\n      dw = this.canvas.width * iconScale;\n    } else {\n      dw = this.icon.width;\n    }\n\n    if (this.icon.height > this.canvas.height * iconScale) {\n      dh = this.canvas.height * iconScale;\n    } else {\n      dh = this.icon.height;\n    }\n\n    const x: number = Math.ceil((this.canvas.width - dw) / 2);\n    const y: number = Math.ceil((this.canvas.height - dh) / 2);\n\n    if ('imageSmoothingQuality' in this.context) {\n      this.context.imageSmoothingQuality = 'high';\n    }\n\n    this.context.drawImage(this.icon, x, y, dw, dh);\n  }\n\n  @action.bound toCanvas() {\n    if (this.canvas) {\n      QRCode.toCanvas(this.canvas, this.text || this.textDefault, {\n        width: this.getWidth(),\n        margin: this.getMargin(),\n        toSJISFunc: toSJIS,\n        color: {\n          dark: this.getDarkColor(),\n          light: this.getLightColor(),\n        }\n      });\n      if (this.icon && this.icon.src) {\n        this.drawIcon();\n      }\n    }\n\n  }\n\n  @action.bound changeText(e: React.FormEvent<HTMLInputElement>, data: InputOnChangeData) {\n    this.setText(String(data.value));\n  }\n\n  @action.bound changeWidth(e: React.FormEvent<HTMLInputElement>, data: InputOnChangeData) {\n    this.setWidth(Number(data.value));\n  }\n\n  @action.bound changeMargin(e: React.FormEvent<HTMLInputElement>, data: InputOnChangeData) {\n    this.setMargin(Number(data.value));\n  }\n\n  @action.bound changeDark(e: React.FormEvent<HTMLInputElement>, data: InputOnChangeData) {\n    this.setDark(String(data.value));\n  }\n\n  @action.bound changeLight(e: React.FormEvent<HTMLInputElement>, data: InputOnChangeData) {\n    this.setLight(String(data.value));\n  }\n\n  @action.bound changeIconScale(e: React.FormEvent<HTMLInputElement>, data: InputOnChangeData) {\n    this.setIconScale(Number(data.value));\n  }\n\n  @action.bound setFile(file: HTMLInputElement) {\n    if (file) {\n      this.file = file;\n    }\n  }\n\n  @action.bound setCanvas(canvas: HTMLCanvasElement) {\n    if (canvas) {\n      this.canvas = canvas;\n      const context = this.canvas.getContext('2d') as ChromeCanvasRenderingContext2D;\n      if (context) {\n        this.context = context;\n      }\n    }\n  }\n\n  @action.bound addFileReadEventListener() {\n    if (this.file) {\n      this.file.addEventListener('change', (e: Event) => {\n        const target = e.target as HTMLInputElement;\n        if (target.files && target.files.length) {\n          this.loadImg(target.files[0]);\n        }\n      }, false);\n    }\n  }\n\n  @action.bound resetAction() {\n    if (window.confirm(this.deleteMessage)) {\n      this.reset();\n      this.toCanvas();\n    }\n  }\n}\n","// 型定義のため\nimport { InputOnChangeData } from 'semantic-ui-react';\n\nimport {\n  observable,\n  action,\n} from 'mobx';\n\nexport default class DummySVGStore {\n  @observable width: number = 200;\n  @observable height: number = 100;\n  @observable background: string = '336699';\n  @observable color: string = 'fff';\n  @observable text: string = '';\n  @observable fontSize: number = 32;\n  @observable fontFamily: string = 'Arial, Meiryo, sans-serif';\n\n  constructor() {\n    this.setTextFromSize();\n  }\n\n  setWidth(width: number) {\n    this.width = width;\n  }\n\n  setHeight(height: number) {\n    this.height = height;\n  }\n\n  setBackground(background: string) {\n    this.background = background;\n  }\n\n  setColor(color: string) {\n    this.color = color;\n  }\n\n  setText(text: string) {\n    this.text = text;\n  }\n\n  setFontSize(fontSize: number) {\n    this.fontSize = fontSize;\n  }\n\n  setFontFamily(fontFamily: string) {\n    this.fontFamily = fontFamily;\n  }\n\n  setTextFromSize() {\n    this.setText(`${this.width} x ${this.height}`);\n  }\n\n  @action.bound changeWidth(e: React.FormEvent<HTMLInputElement>, { value }: InputOnChangeData) {\n    this.setWidth(Number(value));\n    this.setTextFromSize();\n  }\n\n  @action.bound changeHeight(e: React.FormEvent<HTMLInputElement>, { value }: InputOnChangeData) {\n    this.setHeight(Number(value));\n    this.setTextFromSize();\n  }\n\n  @action.bound changeBackground(e: React.FormEvent<HTMLInputElement>, { value }: InputOnChangeData) {\n    this.setBackground(value);\n  }\n\n  @action.bound changeColor(e: React.FormEvent<HTMLInputElement>, { value }: InputOnChangeData) {\n    this.setColor(value);\n  }\n\n  @action.bound changeText(e: React.FormEvent<HTMLInputElement>, { value }: InputOnChangeData) {\n    this.setText(value);\n  }\n\n  @action.bound changeFontSize(e: React.FormEvent<HTMLInputElement>, { value }: InputOnChangeData) {\n    this.setFontSize(Number(value));\n  }\n\n  @action.bound changeFontFamily(e: React.FormEvent<HTMLInputElement>, { value }: InputOnChangeData) {\n    this.setFontFamily(value);\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nimport RouterStore from './stores/RouterStore';\nimport SqlFormatterStore from './stores/SqlFormatterStore';\nimport SqlCodeMirrorStore from './stores/SqlCodeMirrorStore';\nimport JsonFormatterStore from './stores/JsonFormatterStore';\nimport JsonCodeMirrorStore from './stores/JsonCodeMirrorStore';\nimport QrcodeStore from './stores/QrcodeStore';\nimport DummySVGStore from './stores/DummySVGStore';\n\nconst stores = {\n  router: new RouterStore(),\n  sqlFormatter: new SqlFormatterStore(),\n  sqlCodeMirror: new SqlCodeMirrorStore(),\n  jsonFormatter: new JsonFormatterStore(),\n  jsonCodeMirror: new JsonCodeMirrorStore(),\n  qrcode: new QrcodeStore(),\n  dummySVG: new DummySVGStore(),\n};\n\nconst provider = (\n  <Provider {...stores}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(provider, document.getElementById('root') as HTMLElement);\nregisterServiceWorker();\n"],"sourceRoot":""}