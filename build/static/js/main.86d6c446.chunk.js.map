{"version":3,"sources":["components/Sidebar/Sidebar.tsx","components/Footer/Footer.tsx","components/Top/Top.tsx","components/SqlFormatter/SqlFormatter.tsx","components/JsonFormatter/JsonFormatter.tsx","components/Qrcode/Qrcode.tsx","components/App/NotFound.tsx","components/App/App.tsx","registerServiceWorker.ts","stores/RouterStore.ts","stores/SqlFormatterStore.ts","stores/SqlCodeMirrorStore.ts","stores/JsonFormatterStore.ts","stores/JsonCodeMirrorStore.ts","stores/QrcodeStore.ts","index.tsx"],"names":["Sidebar","inject","router","this","props","react","Menu","size","fixed","vertical","inverted","Item","header","name","route","top","path","active","isActive","onClick","goTo","Icon","sqlFormatter","jsonFormatter","qrcode","href","target","React","Footer","Segment","basic","textAlign","Top","observer","Header","as","icon","Content","Subheader","dividing","List","divided","relaxed","verticalAlign","Link","to","Description","SqlFormatter","_ref","sqlCodeMirror","Form","Group","widths","TextArea","label","value","text","placeholder","onChange","format","Select","options","modes","mode","setOptions","react_codemirror2","sql","onBeforeChange","changeSql","JsonFormatter","indentChange","e","_this","setIndent","jsonCodeMirror","indents","indent","json","changeJson","Qrcode","clickFile","file","click","setFile","document","getElementById","setCanvas","toCanvas","addFileReadEventListener","Message","warning","compact","Input","changeText","width","type","min","widthMin","max","widthMax","changeWidth","margin","marginMin","marginMax","changeMargin","dark","pattern","colorPattern","changeDark","light","changeLight","Divider","hidden","inline","iconScale","step","iconScaleStep","iconScaleMin","iconScaleMax","changeIconScale","Button","primary","uploadedFile","concat","id","resetAction","Or","positive","disabled","Boolean","NotFound","App","Router","history","className","components_Sidebar_Sidebar","Switch","Route","exact","component","components_Footer_Footer","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","RouterStore","action","bound","Object","classCallCheck","createBrowserHistory","title","changeTitle","listen","hasOwnProperty","pathname","event","push","String","SqlFormatterStore","defaultText","initializerDefineProperty","_descriptor","_descriptor2","localStorageKey","getText","setText","setSql","sqlFormat","localStorage","getItem","setItem","split","join","setlocalStorage","editor","data","observable","SqlCodeMirrorStore","SqlCodeMirrorStore_descriptor","key","getMode","setMode","lineNumbers","theme","JsonFormatterStore","JsonFormatterStore_descriptor","JsonFormatterStore_descriptor2","_descriptor3","localStorageKeyForIndet","localStorageKeyForText","getIndent","_setIndent","setJson","stringify","isParsed","parsed","JSON","parse","message","castIndent","Number","setTextlocalStorage","_ref2","setIndentlocalStorage","JsonCodeMirrorStore","indentUnit","indentWithTabs","setIndentUnit","setIndentWithTabs","QrcodeStore","QrcodeStore_descriptor","QrcodeStore_descriptor2","QrcodeStore_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","textDefault","widthDefault","marginDefault","darkDefault","lightDefault","iconScaleDefault","deleteMessage","reset","isHexadecimal","color","length","parseInt","Image","setWidth","setMargin","setDark","setLight","setIconScale","resetIcon","indexOf","src","URL","createObjectURL","canvas","context","dw","dh","getIconScale","height","x","Math","ceil","y","imageSmoothingQuality","drawImage","QRCode","getWidth","getMargin","toSJISFunc","toSJIS","getDarkColor","getLightColor","drawIcon","getContext","addEventListener","files","loadImg","confirm","stores","ReactDOM","index_module","components_App_App","process","toString","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"gXAkDeA,EAjCdC,YAAO,6LAGG,IAELC,EACEC,KAAKC,MADPF,OAGF,OACEG,EAAA,cAACC,EAAA,EAAD,CAAMC,KAAK,QAAQC,MAAM,OAAOC,UAAU,EAAMC,UAAU,GACxDL,EAAA,cAACC,EAAA,EAAKK,KAAN,CAAWC,QAAQ,GAAnB,WAGAP,EAAA,cAACC,EAAA,EAAKK,KAAN,CAAWE,KAAMX,EAAOY,MAAMC,IAAIC,KAAMC,OAAQf,EAAOgB,SAAShB,EAAOY,MAAMC,IAAIC,MAAOG,QAASjB,EAAOkB,MACtGf,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,SADb,OAGAR,EAAA,cAACC,EAAA,EAAKK,KAAN,CAAWE,KAAMX,EAAOY,MAAMQ,aAAaN,KAAMC,OAAQf,EAAOgB,SAAShB,EAAOY,MAAMQ,aAAaN,MAAOG,QAASjB,EAAOkB,MACxHf,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,SADb,cAGAR,EAAA,cAACC,EAAA,EAAKK,KAAN,CAAWE,KAAMX,EAAOY,MAAMS,cAAcP,KAAMC,OAAQf,EAAOgB,SAAShB,EAAOY,MAAMS,cAAcP,MAAOG,QAASjB,EAAOkB,MAC1Hf,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,SADb,eAGAR,EAAA,cAACC,EAAA,EAAKK,KAAN,CAAWE,KAAMX,EAAOY,MAAMU,OAAOR,KAAMC,OAAQf,EAAOgB,SAAShB,EAAOY,MAAMU,OAAOR,MAAOG,QAASjB,EAAOkB,MAC5Gf,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,WADb,UAGAR,EAAA,cAACC,EAAA,EAAKK,KAAN,CAAWc,KAAK,wCAAwCC,OAAO,UAC7DrB,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,aADb,2BAvBcc,0BCDPC,mLAVX,OACEvB,EAAA,cAACwB,EAAA,EAAD,CAASC,OAAO,EAAMC,UAAU,SAC9B1B,EAAA,mBAAGoB,KAAK,sCAAsCC,OAAO,UAASrB,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,SAASN,KAAK,SACvFF,EAAA,mBAAGoB,KAAK,+BAA+BC,OAAO,UAASrB,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,UAAUN,KAAK,SACjFF,EAAA,mBAAGoB,KAAK,uBAAuBC,OAAO,UAASrB,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,OAAON,KAAK,iBANzDoB,wCC8GNK,EA9Fd/B,YAAO,YACPgC,+LAEU,IAEL/B,EACEC,KAAKC,MADPF,OAGF,OACEG,EAAA,cAACwB,EAAA,EAAD,CAASC,OAAO,GACdzB,EAAA,cAAC6B,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAM,EAAML,UAAU,UACpC1B,EAAA,cAAC6B,EAAA,EAAOG,QAAR,gBAGAhC,EAAA,cAAC6B,EAAA,EAAOI,UAAR,8BAIFjC,EAAA,cAAC6B,EAAA,EAAD,CAAQC,GAAG,KAAKI,UAAU,GAA1B,gBACAlC,EAAA,cAACwB,EAAA,EAAD,CAASC,OAAO,GAAhB,oBACmBzB,EAAA,mBAAGoB,KAAK,sBAAsBC,OAAO,UAArC,iBAEnBrB,EAAA,cAAC6B,EAAA,EAAD,CAAQC,GAAG,KAAKI,UAAU,GAA1B,YACAlC,EAAA,cAACwB,EAAA,EAAD,CAASC,OAAO,GACdzB,EAAA,cAACmC,EAAA,EAAD,CAAMC,SAAS,EAAMlC,KAAK,QAAQmC,QAAQ,QACxCrC,EAAA,cAACmC,EAAA,EAAK7B,KAAN,KACEN,EAAA,cAACmC,EAAA,EAAKnB,KAAN,CAAWR,KAAK,OAAON,KAAK,QAAQoC,cAAc,WAClDtC,EAAA,cAACmC,EAAA,EAAKH,QAAN,KACEhC,EAAA,cAACmC,EAAA,EAAKN,OAAN,KACE7B,EAAA,cAACuC,EAAA,EAAD,CAAMC,GAAI3C,EAAOY,MAAMQ,aAAaN,MAApC,eAEFX,EAAA,cAACmC,EAAA,EAAKM,YAAN,qCAC+BzC,EAAA,mBAAGoB,KAAK,kDAAkDC,OAAO,UAAjE,gCAAuGrB,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,WAAWN,KAAK,WADjK,OAKJF,EAAA,cAACmC,EAAA,EAAK7B,KAAN,KACEN,EAAA,cAACmC,EAAA,EAAKnB,KAAN,CAAWR,KAAK,OAAON,KAAK,QAAQoC,cAAc,WAClDtC,EAAA,cAACmC,EAAA,EAAKH,QAAN,KACEhC,EAAA,cAACmC,EAAA,EAAKN,OAAN,KACE7B,EAAA,cAACuC,EAAA,EAAD,CAAMC,GAAI3C,EAAOY,MAAMS,cAAcP,MAArC,gBAEFX,EAAA,cAACmC,EAAA,EAAKM,YAAN,8BACwBzC,EAAA,mBAAGoB,KAAK,2FAA2FC,OAAO,UAA1G,qBAAqIrB,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,WAAWN,KAAK,cAI5LF,EAAA,cAACmC,EAAA,EAAK7B,KAAN,KACEN,EAAA,cAACmC,EAAA,EAAKnB,KAAN,CAAWR,KAAK,SAASN,KAAK,QAAQoC,cAAc,WACpDtC,EAAA,cAACmC,EAAA,EAAKH,QAAN,KACEhC,EAAA,cAACmC,EAAA,EAAKN,OAAN,KACE7B,EAAA,cAACuC,EAAA,EAAD,CAAMC,GAAI3C,EAAOY,MAAMU,OAAOR,MAA9B,WAEFX,EAAA,cAACmC,EAAA,EAAKM,YAAN,2BACqBzC,EAAA,mBAAGoB,KAAK,yCAAyCC,OAAO,UAAxD,uBAAqFrB,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,WAAWN,KAAK,gBAM7IF,EAAA,cAAC6B,EAAA,EAAD,CAAQC,GAAG,MAAX,UACA9B,EAAA,cAACwB,EAAA,EAAD,CAASC,OAAO,GACdzB,EAAA,cAACmC,EAAA,EAAD,CAAMC,SAAS,EAAMlC,KAAK,SACxBF,EAAA,cAACmC,EAAA,EAAK7B,KAAN,KACEN,EAAA,cAACmC,EAAA,EAAKnB,KAAN,CAAWR,KAAK,OAAON,KAAK,QAAQoC,cAAc,WAClDtC,EAAA,cAACmC,EAAA,EAAKH,QAAN,KACEhC,EAAA,cAACmC,EAAA,EAAKN,OAAN,KACE7B,EAAA,mBAAGoB,KAAK,wCAAwCC,OAAO,UAAvD,mBACkBrB,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,eAG/BR,EAAA,cAACmC,EAAA,EAAKM,YAAN,wCAORzC,EAAA,cAAC6B,EAAA,EAAD,CAAQC,GAAG,KAAKI,UAAU,GAA1B,UACAlC,EAAA,cAACwB,EAAA,EAAD,CAASC,OAAO,GACdzB,EAAA,cAACmC,EAAA,EAAD,CAAMjC,KAAK,SACTF,EAAA,cAACmC,EAAA,EAAK7B,KAAN,KACEN,EAAA,cAACmC,EAAA,EAAKnB,KAAN,CAAWR,KAAK,SAASN,KAAK,UAC9BF,EAAA,cAACmC,EAAA,EAAKH,QAAN,CAAcM,cAAc,UAC1BtC,EAAA,mBAAGoB,KAAK,sCAAsCC,OAAO,UAArD,uCAAkGrB,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,WAAWN,KAAK,uBAlF3HoB,sCC6BHoB,UA7Bd9C,YAAO,kBACPA,YAAO,mBACPgC,+LAEU,IAAAe,EAIH7C,KAAKC,MAFPkB,EAFK0B,EAEL1B,aACA2B,EAHKD,EAGLC,cAGF,OACE5C,EAAA,cAACwB,EAAA,EAAD,CAASC,OAAO,GACdzB,EAAA,cAAC6B,EAAA,EAAD,CAAQC,GAAG,KAAKI,UAAU,GACxBlC,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,SADb,cAGAR,EAAA,cAAC6C,EAAA,EAAD,KACE7C,EAAA,cAAC6C,EAAA,EAAKC,MAAN,CAAYC,OAAO,SACjB/C,EAAA,cAAC6C,EAAA,EAAKG,SAAN,CAAeC,MAAM,MAAMC,MAAOjC,EAAakC,KAAMC,YAAY,wBAAwBC,SAAUpC,EAAaqC,UAElHtD,EAAA,cAAC6C,EAAA,EAAKC,MAAN,KACE9C,EAAA,cAAC6C,EAAA,EAAKU,OAAN,CAAaN,MAAM,OAAOO,QAASZ,EAAca,MAAOP,MAAON,EAAcY,QAAQE,KAAML,SAAUT,EAAce,eAGvH3D,EAAA,cAAC4D,EAAA,WAAD,CAAYV,MAAOjC,EAAa4C,IAAKC,eAAgB7C,EAAa8C,UAAWP,QAASZ,EAAcY,kBApBjFlC,0BCmCZ0C,UAnCdpE,YAAO,mBACPA,YAAO,oBACPgC,yNAGCqC,aAAe,SAACC,EAAsCnE,GACpDoE,EAAKpE,MAAMmB,cAAckD,UAAUF,EAAGnE,GACtCoE,EAAKpE,MAAMsE,eAAeD,UAAUF,EAAGnE,4EAGhC,IAAA4C,EAIH7C,KAAKC,MAFPmB,EAFKyB,EAELzB,cACAmD,EAHK1B,EAGL0B,eAGF,OACErE,EAAA,cAACwB,EAAA,EAAD,CAASC,OAAO,GACdzB,EAAA,cAAC6B,EAAA,EAAD,CAAQC,GAAG,KAAKI,UAAU,GACxBlC,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,SADb,eAGAR,EAAA,cAAC6C,EAAA,EAAD,KACE7C,EAAA,cAAC6C,EAAA,EAAKC,MAAN,CAAYC,OAAO,SACjB/C,EAAA,cAAC6C,EAAA,EAAKG,SAAN,CAAeC,MAAM,OAAOC,MAAOhC,EAAciC,KAAMC,YAAY,yBAAyBC,SAAUnC,EAAcoC,UAEtHtD,EAAA,cAAC6C,EAAA,EAAKC,MAAN,KACE9C,EAAA,cAAC6C,EAAA,EAAKU,OAAN,CAAaN,MAAM,SAASO,QAAStC,EAAcoD,QAASpB,MAAOhC,EAAcqD,OAAQlB,SAAUvD,KAAKmE,iBAG5GjE,EAAA,cAAC4D,EAAA,WAAD,CAAYV,MAAOhC,EAAcsD,KAAMV,eAAgB5C,EAAcuD,WAAYjB,QAASa,EAAeb,kBA1BrFlC,qDC8DboD,UApEd9E,YAAO,YACPgC,yNAcC+C,UAAY,WACNR,EAAKpE,MAAMoB,OAAOyD,MACpBT,EAAKpE,MAAMoB,OAAOyD,KAAKC,4FAbP,IAEhB1D,EACErB,KAAKC,MADPoB,OAGFA,EAAO2D,QAAQC,SAASC,eAAe,SACvC7D,EAAO8D,UAAUF,SAASC,eAAe,WACzC7D,EAAO+D,WACP/D,EAAOgE,4DASA,IAELhE,EACErB,KAAKC,MADPoB,OAGF,OACEnB,EAAA,cAACwB,EAAA,EAAD,CAASC,OAAO,GACdzB,EAAA,cAAC6B,EAAA,EAAD,CAAQC,GAAG,KAAKI,UAAU,GACxBlC,EAAA,cAACgB,EAAA,EAAD,CAAMR,KAAK,WADb,UAGAR,EAAA,cAACoF,EAAA,EAAD,CAASC,SAAS,EAAMC,SAAS,EAAMpF,KAAK,SAC1CF,EAAA,sEAEFA,EAAA,cAAC6C,EAAA,EAAD,KACE7C,EAAA,cAAC6C,EAAA,EAAKC,MAAN,KACE9C,EAAA,cAAC6C,EAAA,EAAK0C,MAAN,CAAYtC,MAAM,OAAOC,MAAO/B,EAAOgC,KAAME,SAAUlC,EAAOqE,WAAYC,MAAO,KAEnFzF,EAAA,cAAC6C,EAAA,EAAKC,MAAN,KACE9C,EAAA,cAAC6C,EAAA,EAAK0C,MAAN,CAAYtC,MAAM,QAAQC,MAAO/B,EAAOsE,MAAOC,KAAK,SAASC,IAAKxE,EAAOyE,SAAUC,IAAK1E,EAAO2E,SAAUzC,SAAUlC,EAAO4E,YAAaN,MAAO,IAC9IzF,EAAA,cAAC6C,EAAA,EAAK0C,MAAN,CAAYtC,MAAM,SAASC,MAAO/B,EAAO6E,OAAQN,KAAK,SAASC,IAAKxE,EAAO8E,UAAWJ,IAAK1E,EAAO+E,UAAW7C,SAAUlC,EAAOgF,aAAcV,MAAO,IACnJzF,EAAA,cAAC6C,EAAA,EAAK0C,MAAN,CAAYtC,MAAM,aAAaC,MAAO/B,EAAOiF,KAAMC,QAASlF,EAAOmF,aAAcjD,SAAUlC,EAAOoF,WAAYd,MAAO,IACrHzF,EAAA,cAAC6C,EAAA,EAAK0C,MAAN,CAAYtC,MAAM,cAAcC,MAAO/B,EAAOqF,MAAOH,QAASlF,EAAOmF,aAAcjD,SAAUlC,EAAOsF,YAAahB,MAAO,KAE1HzF,EAAA,cAAC0G,EAAA,EAAD,CAASC,QAAQ,IACjB3G,EAAA,cAAC6C,EAAA,EAAKC,MAAN,CAAY8D,QAAQ,GAClB5G,EAAA,cAAC6C,EAAA,EAAK0C,MAAN,CAAYtC,MAAM,aAAaC,MAAO/B,EAAO0F,UAAWnB,KAAK,SAASoB,KAAM3F,EAAO4F,cAAepB,IAAKxE,EAAO6F,aAAcnB,IAAK1E,EAAO8F,aAAc5D,SAAUlC,EAAO+F,kBACvKlH,EAAA,cAACmH,EAAA,EAAD,CAAQzB,KAAK,SAAS5E,QAAShB,KAAK6E,UAAWyC,SAAS,GAAxD,YAFF,SAEmFjG,EAAOkG,aAAelG,EAAOkG,aAAa7G,KAAO,GAFpI,IAEyIW,EAAOkG,aAAP,KAAAC,OAA2BnG,EAAOkG,aAAa3B,KAA/C,MAA0D,GACjM1F,EAAA,uBAAO0F,KAAK,OAAO6B,GAAG,UAExBvH,EAAA,cAAC0G,EAAA,EAAD,CAASC,QAAQ,IACjB3G,EAAA,cAAC6C,EAAA,EAAKC,MAAN,CAAY8D,QAAQ,GAClB5G,EAAA,cAACmH,EAAA,EAAOrE,MAAR,KACE9C,EAAA,cAACmH,EAAA,EAAD,CAAQzB,KAAK,SAAS5E,QAASK,EAAOqG,aAAtC,SACAxH,EAAA,cAACmH,EAAA,EAAOM,GAAR,MACAzH,EAAA,cAACmH,EAAA,EAAD,CAAQzB,KAAK,SAASgC,UAAU,EAAM5G,QAASK,EAAO+D,SAAUyC,UAAWC,QAAQzG,EAAOgC,OAA1F,aAINnD,EAAA,cAAC0G,EAAA,EAAD,CAASC,QAAQ,IACjB3G,EAAA,cAACwB,EAAA,EAAD,CAAS8D,SAAS,GAChBtF,EAAA,wBAAQuH,GAAG,oBA3DAjG,sBCVNuG,mLARX,OACE7H,EAAA,cAACwB,EAAA,EAAD,CAASC,OAAO,GACdzB,EAAA,cAAC6B,EAAA,EAAD,CAAQC,GAAG,KAAKI,UAAU,GAA1B,qBAJeZ,aCuDRwG,6CA5BdlI,YAAO,YACPgC,+LAEU,IAEL/B,EACEC,KAAKC,MADPF,OAGF,OACEG,EAAA,cAAC+H,EAAA,EAAD,CAAQC,QAASnI,EAAOmI,SACtBhI,EAAA,qBAAKiI,UAAU,OACbjI,EAAA,cAACkI,EAAD,MACAlI,EAAA,qBAAKiI,UAAU,QACbjI,EAAA,cAACmI,EAAA,EAAD,KACEnI,EAAA,cAACoI,EAAA,EAAD,CAAOC,OAAO,EAAM1H,KAAK,IAAI2H,UAAW3G,IACxC3B,EAAA,cAACoI,EAAA,EAAD,CAAOzH,KAAK,iBAAiB2H,UAAW5F,IACxC1C,EAAA,cAACoI,EAAA,EAAD,CAAOzH,KAAK,kBAAkB2H,UAAWtE,IACzChE,EAAA,cAACoI,EAAA,EAAD,CAAOzH,KAAK,UAAU2H,UAAW5D,IACjC1E,EAAA,cAACoI,EAAA,EAAD,CAAOE,UAAWT,KAEpB7H,EAAA,cAACuI,EAAD,gBAlBMjH,sBCxBZkH,EAAcZ,QACW,cAA7Ba,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAgCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WAClCD,IACFA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAOvBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,wLCjE5CC,MAoClBC,KAAOC,QAIPD,KAAOC,mBAnBR,SAAAF,IAAc,IAAA3F,EAAArE,KAAAmK,OAAAC,EAAA,EAAAD,CAAAnK,KAAAgK,GAAAhK,KApBdkI,QAAUmC,eAoBIrK,KAnBdW,MAA8D,CAC5DC,IAAK,CACHC,KAAM,IACNyJ,MAAO,WAETnJ,aAAc,CACZN,KAAM,iBACNyJ,MAAO,wBAETlJ,cAAe,CACbP,KAAM,kBACNyJ,MAAO,yBAETjJ,OAAQ,CACNR,KAAM,UACNyJ,MAAO,qBAKTtK,KAAKuK,YAAYvK,KAAKkI,QAAQU,UAC9B5I,KAAKkI,QAAQsC,OAAO,SAAC5B,GACnBvE,EAAKkG,YAAY3B,6DAITA,GACV,IAAK,IAAMjI,KAASX,KAAKW,MACnBX,KAAKW,MAAM8J,eAAe9J,IAAUX,KAAKW,MAAMA,GAAOE,OAAS+H,EAAS8B,WAC1EzF,SAASqF,MAAQtK,KAAKW,MAAMA,GAAO2J,wCAKlBzJ,GACrB,OAAO+H,SAAS8B,WAAa7J,+BAGZ8J,KAA6D,IAAtBjK,EAAsBmC,EAAtBnC,KACxDV,KAAKkI,QAAQ0C,KAAKC,OAAOnK,wQCvCRoK,MA4ClBb,KAAOC,QAMPD,KAAOC,mBA1CR,SAAAY,IAAeX,OAAAC,EAAA,EAAAD,CAAAnK,KAAA8K,GAAA9K,KAPf+K,YAAsB,yCAORZ,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,OAAAiL,EAAAjL,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,MAAAkL,EAAAlL,WAFdmL,gBAA0B,yBAGxB,IAAM9H,EAAerD,KAAKoL,UACtB/H,GACFrD,KAAKqL,QAAQhI,GACbrD,KAAKsL,OAAOtL,KAAKuL,UAAUlI,KAE3BrD,KAAKsL,OAAOtL,KAAK+K,mEAKnB,IAAI1H,EAAe,GAInB,OAHIsF,OAAO6C,cAAsE,OAAtD7C,OAAO6C,aAAaC,QAAQzL,KAAKmL,mBAC1D9H,EAAOwH,OAAOlC,OAAO6C,aAAaC,QAAQzL,KAAKmL,mBAE1C9H,kCAGDA,GACNrD,KAAKqD,KAAOA,0CAGEA,GACVsF,OAAO6C,cACT7C,OAAO6C,aAAaE,QAAQ1L,KAAKmL,gBAAiB9H,kCAI/CA,GACLrD,KAAK+D,IAAMV,GAAQrD,KAAK+K,8CAGhB1H,GACR,OAAOlC,KAAaqC,OAAOH,GAAMsI,MAAM,KAAKC,KAAK,wCAG9BxH,KAAiE,IAAvBhB,EAAuBP,EAAvBO,MAC7DpD,KAAKqL,QAAQR,OAAOzH,IACpBpD,KAAK6L,gBAAgBhB,OAAOzH,IAC5BpD,KAAKsL,OAAOtL,KAAKuL,UAAUV,OAAOzH,uCAGZ0I,EAA2BC,EAA+B3I,GAChFpD,KAAKsL,OAAOlI,+CAhDb4I,8EAA0B,wCAC1BA,8EAAyB,iOCLPC,MAyDlBhC,KAAOC,mBAzBR,SAAA+B,IAAe9B,OAAAC,EAAA,EAAAD,CAAAnK,KAAAiM,GAAA9B,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,UAAAkM,EAAAlM,WAzBf2D,MAA6B,CAC3B,CACEwI,IAAK,MACL9I,KAAM,aACND,MAAO,cAET,CACE+I,IAAK,QACL9I,KAAM,eACND,MAAO,gBAET,CACE+I,IAAK,QACL9I,KAAM,eACND,MAAO,gBAET,CACE+I,IAAK,QACL9I,KAAM,eACND,MAAO,iBAMGpD,KAFdmL,gBAA0B,kCAGxB,IAAMvH,EAAe5D,KAAKoM,UACtBxI,GACF5D,KAAKqM,QAAQzI,yDAKf,IAAIA,EAAe,GAInB,OAHI+E,OAAO6C,cAAsE,OAAtD7C,OAAO6C,aAAaC,QAAQzL,KAAKmL,mBAC1DvH,EAAOiH,OAAOlC,OAAO6C,aAAaC,QAAQzL,KAAKmL,mBAE1CvH,kCAGDR,GACNpD,KAAK0D,QAAQE,KAAOR,0CAGNA,GACVuF,OAAO6C,cACT7C,OAAO6C,aAAaE,QAAQ1L,KAAKmL,gBAAiB/H,sCAI7BgB,KAA8D,IAAvBhB,EAAuBP,EAAvBO,MAC9DpD,KAAKqM,QAAQxB,OAAOzH,IACpBpD,KAAK6L,gBAAgBhB,OAAOzH,mDA1D7B4I,8EAAqD,CACpDM,aAAa,EACb1I,KAAM,aACN2I,MAAO,yICFUC,MAoGlBvC,KAAOC,QAMPD,KAAOC,SAMPD,KAAOC,oBApFR,SAAAsC,IAAerC,OAAAC,EAAA,EAAAD,CAAAnK,KAAAwM,GAAAxM,KA3Bf+K,YAAsB,yCA2BRZ,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,SAAAyM,GAAAzM,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,OAAA0M,GAAA1M,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,OAAA2M,GAAA3M,WArBdwE,QAA+B,CAC7B,CACE2H,IAAK,SACL9I,KAAM,UACND,MAAO,KAET,CACE+I,IAAK,SACL9I,KAAM,UACND,MAAO,KAET,CACE+I,IAAK,MACL9I,KAAM,MACND,MAAO,OAOGpD,KAHd4M,wBAAkC,4BAGpB5M,KAFd6M,uBAAiC,0BAG/B,IAAMpI,EAAiBzE,KAAK8M,YACtBzJ,EAAerD,KAAKoL,UACtB3G,GACFzE,KAAK+M,WAAWtI,GAEdpB,GACFrD,KAAKqL,QAAQhI,GACbrD,KAAKgN,QAAQhN,KAAKiN,UAAU5J,KAE5BrD,KAAKgN,QAAQhN,KAAK+K,mEAKpB,IAAI1H,EAAe,GAInB,OAHIsF,OAAO6C,cAA6E,OAA7D7C,OAAO6C,aAAaC,QAAQzL,KAAK6M,0BAC1DxJ,EAAOwH,OAAOlC,OAAO6C,aAAaC,QAAQzL,KAAK6M,0BAE1CxJ,kCAGDA,GACNrD,KAAKqD,KAAOA,8CAGMA,GACdsF,OAAO6C,cACT7C,OAAO6C,aAAaE,QAAQ1L,KAAK6M,uBAAwBxJ,mCAIrDA,GACNrD,KAAK0E,KAAOrB,GAAQrD,KAAK+K,gDAIzB,IAAItG,EAAiB,GAIrB,OAHIkE,OAAO6C,cAA8E,OAA9D7C,OAAO6C,aAAaC,QAAQzL,KAAK4M,2BAC1DnI,EAASoG,OAAOlC,OAAO6C,aAAaC,QAAQzL,KAAK4M,2BAE5CnI,qCAGErB,GACTpD,KAAKyE,OAASrB,gDAGMC,GAChBsF,OAAO6C,cACT7C,OAAO6C,aAAaE,QAAQ1L,KAAK4M,wBAAyBvJ,qCAIpDqB,GACR,IAAIwI,GAAoB,EACpBC,EAAiB,GACrB,IACMzI,IAEFwI,KADAC,EAASC,KAAKC,MAAM3I,KAGtB,MAAON,GACP+I,EAAM,GAAA3F,OAAMpD,EAAE1D,KAAR,OAAA8G,OAAkBpD,EAAEkJ,SAE5B,OAAOJ,EAAWE,KAAKH,UAAUE,EAAQ,KAAMnN,KAAKuN,cAAgBJ,uCAIpE,OAAOK,OAAOxN,KAAKyE,QAAU,EAAI+I,OAAOxN,KAAKyE,QAAUzE,KAAKyE,sCAGzCL,KAAiE,IAAvBhB,EAAuBP,EAAvBO,MAC7DpD,KAAKqL,QAAQR,OAAOzH,IACpBpD,KAAKyN,oBAAoB5C,OAAOzH,IAChCpD,KAAKgN,QAAQhN,KAAKiN,UAAUpC,OAAOzH,uCAGbgB,KAA8D,IAAvBhB,EAAuBsK,EAAvBtK,MAC7DpD,KAAK+M,WAAWlC,OAAOzH,IACvBpD,KAAK2N,sBAAsB9C,OAAOzH,IAClCpD,KAAKgN,QAAQhN,KAAKiN,UAAUjN,KAAKqD,0CAGVyI,EAA2BC,EAA+B3I,GACjFpD,KAAKgN,QAAQ5J,mDA9Gd4I,8EAA4B,4CAC5BA,8EAA0B,2CAC1BA,8EAA0B,6VCRR4B,OAmBlB3D,KAAOC,oJAVM9G,GAEZpD,KAAK0D,QAAQmK,WAAazK,EAAQ,EAAIA,EAAQ,4CAG9BA,GAEhBpD,KAAK0D,QAAQoK,iBAAmB1K,EAAQ,qCAGlBgB,KAA8D,IAAvBhB,EAAuBP,EAAvBO,MAC7DpD,KAAK+N,cAAcP,OAAOpK,IAC1BpD,KAAKgO,kBAAkBR,OAAOpK,qDApB/B4I,8EAAqD,CACpDM,aAAa,EACb1I,KAAM,sBACN2I,MAAO,iBACPsB,WAAY,EACZC,gBAAgB,uKCGCG,OA4IlBhE,KAAOC,SAkBPD,KAAOC,SAIPD,KAAOC,SAIPD,KAAOC,SAIPD,KAAOC,SAIPD,KAAOC,SAIPD,KAAOC,SAIPD,KAAOC,SAMPD,KAAOC,SAUPD,KAAOC,SAWPD,KAAOC,oBAlLR,SAAA+D,IAAe9D,OAAAC,EAAA,EAAAD,CAAAnK,KAAAiO,GAAA9D,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,OAAAkO,GAAAlO,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,QAAAmO,GAAAnO,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,SAAAoO,GAAApO,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,YAAAqO,GAAArO,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,YAAAsO,GAAAtO,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,WAAAuO,GAAAvO,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,WAAAwO,GAAAxO,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,OAAAyO,GAAAzO,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,QAAA0O,GAAA1O,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,eAAA2O,GAAA3O,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,OAAA4O,GAAA5O,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,SAAA6O,GAAA7O,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,UAAA8O,GAAA9O,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,OAAA+O,GAAA/O,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,eAAAgP,GAAAhP,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,YAAAiP,GAAAjP,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,gBAAAkP,GAAAlP,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,eAAAmP,GAAAnP,MAAAmK,OAAAa,GAAA,EAAAb,CAAAnK,KAAA,eAAAoP,GAAApP,WATfqP,YAAsB,SASRrP,KARdsP,aAAuB,IAQTtP,KAPduP,cAAwB,EAOVvP,KANdwP,YAAsB,WAMRxP,KALdyP,aAAuB,WAKTzP,KAJd0P,iBAA2B,IAIb1P,KAFd2P,cAAwB,kBAGtB3P,KAAK4P,4DAGCvM,GACNrD,KAAKqD,KAAOA,mCAGLsC,GACP3F,KAAK2F,MAAQA,qCAIb,OAAO3F,KAAK2F,OAAS3F,KAAKgG,SAAWhG,KAAK2F,OAAS3F,KAAKsP,aAAetP,KAAKgG,2CAGpEE,GACRlG,KAAKkG,OAASA,sCAId,OAAOlG,KAAKkG,QAAUlG,KAAKoG,UAAYpG,KAAKkG,QAAUlG,KAAKuP,cAAgBvP,KAAKoG,0CAG1EE,GACNtG,KAAKsG,KAAOA,yCAIZ,UAAAkB,OAAWxH,KAAK6P,cAAc7P,KAAKsG,MAAQtG,KAAKsG,KAAOtG,KAAKwP,8CAGrD9I,GACP1G,KAAK0G,MAAQA,0CAIb,UAAAc,OAAWxH,KAAK6P,cAAc7P,KAAK0G,OAAS1G,KAAK0G,MAAQ1G,KAAKyP,mDAGnD1I,GACX/G,KAAK+G,UAAYA,yCAIjB,OAAO/G,KAAK+G,WAAa/G,KAAKmH,cAAenH,KAAK+G,WAAqC/G,KAAK0P,uDAGhFI,GACZ,OAAOA,EAAMC,QAAU,GAAwC,OAAnCD,EAAMhH,MAAM9I,KAAKwG,eAA0BgH,OAAOwC,SAASF,EAAO,KAAO,+CAIjG9P,KAAK8E,OACP9E,KAAK8E,KAAK1B,MAAQ,IAEpBpD,KAAKuH,aAAe,KACpBvH,KAAKiC,KAAO,IAAIgO,sCAIhBjQ,KAAKqL,QAAQrL,KAAKqP,aAClBrP,KAAKkQ,SAASlQ,KAAKsP,cACnBtP,KAAKmQ,UAAUnQ,KAAKuP,eACpBvP,KAAKoQ,QAAQpQ,KAAKwP,aAClBxP,KAAKqQ,SAASrQ,KAAKyP,cACnBzP,KAAKsQ,aAAatQ,KAAK0P,kBACvB1P,KAAKuQ,4CAGChJ,GACDvH,KAAKiC,MACNsF,IACFvH,KAAKuH,aAAeA,EAC6B,IAA7CvH,KAAKuH,aAAa3B,KAAK4K,QAAQ,YACjCxQ,KAAKiC,KAAKwO,IAAMC,IAAIC,gBAAgB3Q,KAAKuH,mDAM7C,GAAKvH,KAAKiC,MAASjC,KAAK4Q,QAAW5Q,KAAK6Q,QAAxC,CAEA,IAAIC,EACAC,EACEhK,EAAoB/G,KAAKgR,eAG7BF,EADE9Q,KAAKiC,KAAK0D,MAAQ3F,KAAK4Q,OAAOjL,MAAQoB,EACnC/G,KAAK4Q,OAAOjL,MAAQoB,EAEpB/G,KAAKiC,KAAK0D,MAIfoL,EADE/Q,KAAKiC,KAAKgP,OAASjR,KAAK4Q,OAAOK,OAASlK,EACrC/G,KAAK4Q,OAAOK,OAASlK,EAErB/G,KAAKiC,KAAKgP,OAGjB,IAAMC,EAAYC,KAAKC,MAAMpR,KAAK4Q,OAAOjL,MAAQmL,GAAM,GACjDO,EAAYF,KAAKC,MAAMpR,KAAK4Q,OAAOK,OAASF,GAAM,GAEpD,0BAA2B/Q,KAAK6Q,UAClC7Q,KAAK6Q,QAAQS,sBAAwB,QAGvCtR,KAAK6Q,QAAQU,UAAUvR,KAAKiC,KAAMiP,EAAGG,EAAGP,EAAIC,uCAIxC/Q,KAAK4Q,SACPY,KAAOpM,SAASpF,KAAK4Q,OAAQ5Q,KAAKqD,MAAQrD,KAAKqP,YAAa,CAC1D1J,MAAO3F,KAAKyR,WACZvL,OAAQlG,KAAK0R,YACbC,WAAYC,KACZ9B,MAAO,CACLxJ,KAAMtG,KAAK6R,eACXnL,MAAO1G,KAAK8R,mBAGZ9R,KAAKiC,MAAQjC,KAAKiC,KAAKwO,KACzBzQ,KAAK+R,+CAMc3N,EAA2C2H,GAClE/L,KAAKqL,QAAQR,OAAOkB,EAAK3I,4CAGDgB,EAA2C2H,GACnE/L,KAAKkQ,SAAS1C,OAAOzB,EAAK3I,6CAGDgB,EAA2C2H,GACpE/L,KAAKmQ,UAAU3C,OAAOzB,EAAK3I,2CAGJgB,EAA2C2H,GAClE/L,KAAKoQ,QAAQvF,OAAOkB,EAAK3I,4CAGDgB,EAA2C2H,GACnE/L,KAAKqQ,SAASxF,OAAOkB,EAAK3I,gDAGEgB,EAA2C2H,GACvE/L,KAAKsQ,aAAa9C,OAAOzB,EAAK3I,wCAGV0B,GAChBA,IACF9E,KAAK8E,KAAOA,qCAIQ8L,GACtB,GAAIA,EAAQ,CACV5Q,KAAK4Q,OAASA,EACd,IAAMC,EAAU7Q,KAAK4Q,OAAOoB,WAAW,MACnCnB,IACF7Q,KAAK6Q,QAAUA,uDAKoB,IAAAxM,EAAArE,KACnCA,KAAK8E,MACP9E,KAAK8E,KAAKmN,iBAAiB,SAAU,SAAC7N,GACpC,IAAM7C,EAAS6C,EAAE7C,OACbA,EAAO2Q,OAAS3Q,EAAO2Q,MAAMnC,QAC/B1L,EAAK8N,QAAQ5Q,EAAO2Q,MAAM,MAE3B,yCAKDvJ,OAAOyJ,QAAQpS,KAAK2P,iBACtB3P,KAAK4P,QACL5P,KAAKoF,0DAnNR4G,8EAA0B,4CAC1BA,+EAA2B,4CAC3BA,+EAA4B,+CAC5BA,+EAA+B,+CAC/BA,+EAA+B,gDAC/BA,+EAA8B,8CAC9BA,+EAA8B,4CAC9BA,8EAA0B,4CAC1BA,8EAA2B,mDAC3BA,8EAAkC,4DAElCA,2GACAA,4GACAA,yGACAA,iHACAA,8GACAA,+EAA+B,mDAC/BA,8EAAmC,oDACnCA,8EAAkC,mDAClCA,+EAAkC,ozCC1B/BqG,GAAS,CACbtS,OAAQ,IAAIiK,GACZ7I,aAAc,IAAI2J,GAClBhI,cAAe,IAAImJ,GACnB7K,cAAe,IAAIoL,GACnBjI,eAAgB,IAAIqJ,GACpBvM,OAAQ,IAAI4M,IAGdqE,SACEpS,EAAA,cAACqS,EAAA,EAAaF,GACZnS,EAAA,cAACsS,EAAD,OAEFvN,SAASC,eAAe,SPNX,WACb,GAA6C,kBAAmB+D,UAAW,CAMzE,GAJkB,IAAIyH,IACpB+B,GACA9J,OAAOC,SAAS8J,YAEJC,SAAWhK,OAAOC,SAAS+J,OAIvC,OAGFhK,OAAOsJ,iBAAiB,OAAQ,WAC9B,IAAMjJ,EAAK,GAAAxB,OAAMiL,GAAN,sBAEN/J,EA0CX,SAAiCM,GAE/B4J,MAAM5J,GACHI,KAAK,SAAAyJ,GAGkB,MAApBA,EAASC,SACwD,IAAjED,EAASE,QAAQC,IAAI,gBAAiBxC,QAAQ,cAG9CvH,UAAUC,cAAc+J,MAAM7J,KAAK,SAAAC,GACjCA,EAAa6J,aAAa9J,KAAK,WAC7BT,OAAOC,SAASuK,aAKpBpK,EAAgBC,KAGnBc,MAAM,WACLF,QAAQC,IACN,mEA3DAuJ,CAAwBpK,GAHxBD,EAAgBC,MOXxBqK","file":"static/js/main.86d6c446.chunk.js","sourcesContent":["// 型定義のため\nimport RoutesStore from '../../stores/RouterStore';\n\nimport * as React from 'react';\nimport {\n  inject,\n  // observer,\n} from 'mobx-react';\nimport {\n  Menu,\n  Icon,\n} from 'semantic-ui-react';\n\ninterface Iprops {\n  router: RoutesStore;\n}\n\n@inject('router')\n// @observer\nclass Sidebar extends React.Component {\n  render() {\n    const {\n      router,\n    } = this.props as Iprops;\n\n    return (\n      <Menu size=\"small\" fixed=\"left\" vertical={true} inverted={true}>\n        <Menu.Item header={true}>\n          Utility\n        </Menu.Item>\n        <Menu.Item name={router.route.top.path} active={router.isActive(router.route.top.path)} onClick={router.goTo}>\n          <Icon name=\"home\" />TOP\n        </Menu.Item>\n        <Menu.Item name={router.route.sqlFormatter.path} active={router.isActive(router.route.sqlFormatter.path)} onClick={router.goTo}>\n          <Icon name=\"code\" />SQL format\n        </Menu.Item>\n        <Menu.Item name={router.route.jsonFormatter.path} active={router.isActive(router.route.jsonFormatter.path)} onClick={router.goTo}>\n          <Icon name=\"code\" />JSON format\n        </Menu.Item>\n        <Menu.Item name={router.route.qrcode.path} active={router.isActive(router.route.qrcode.path)} onClick={router.goTo}>\n          <Icon name=\"qrcode\" />QRCode\n        </Menu.Item>\n        <Menu.Item href=\"https://plantuml-editor.kkeisuke.com/\" target=\"_blank\">\n          <Icon name=\"external\" />PlantUML Editor\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default Sidebar;\n","import * as React from 'react';\nimport {\n  Segment,\n  Icon,\n} from 'semantic-ui-react';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <Segment basic={true} textAlign=\"right\">\n        <a href=\"https://github.com/kkeisuke/utility\" target=\"_blank\"><Icon name=\"github\" size=\"big\" /></a>\n        <a href=\"https://twitter.com/kkeisuke\" target=\"_blank\"><Icon name=\"twitter\" size=\"big\" /></a>\n        <a href=\"http://kkeisuke.com/\" target=\"_blank\"><Icon name=\"home\" size=\"big\" /></a>\n      </Segment>\n    );\n  }\n}\n\nexport default Footer;\n","// 型定義のため\nimport RoutesStore from '../../stores/RouterStore';\n\nimport * as React from 'react';\nimport {\n  Link,\n} from 'react-router-dom';\nimport {\n  inject,\n  observer,\n} from 'mobx-react';\nimport {\n  Header,\n  Segment,\n  List,\n  Icon\n} from 'semantic-ui-react';\n\ninterface Iprops {\n  router: RoutesStore;\n}\n\n@inject('router')\n@observer\nclass Top extends React.Component {\n  render() {\n    const {\n      router,\n    } = this.props as Iprops;\n\n    return (\n      <Segment basic={true}>\n        <Header as=\"h1\" icon={true} textAlign=\"center\">\n          <Header.Content>\n            Utility\n          </Header.Content>\n          <Header.Subheader>\n            utility.kkeisuke.com\n          </Header.Subheader>\n        </Header>\n        <Header as=\"h2\" dividing={true}>Introduction</Header>\n        <Segment basic={true}>\n          utility tools by <a href=\"http://kkeisuke.com\" target=\"_blank\">kkeisuke.com</a>\n        </Segment>\n        <Header as=\"h2\" dividing={true}>Contents</Header>\n        <Segment basic={true}>\n          <List divided={true} size=\"large\" relaxed=\"very\">\n            <List.Item>\n              <List.Icon name=\"code\" size=\"large\" verticalAlign=\"middle\" />\n              <List.Content>\n                <List.Header>\n                  <Link to={router.route.sqlFormatter.path}>SQL format</Link>\n                </List.Header>\n                <List.Description>\n                  pretty-printing SQL queries. <a href=\"https://github.com/zeroturnaround/sql-formatter\" target=\"_blank\">zeroturnaround/sql-formatter <Icon name=\"external\" size=\"small\" /></a>.\n                </List.Description>\n              </List.Content>\n            </List.Item>\n            <List.Item>\n              <List.Icon name=\"code\" size=\"large\" verticalAlign=\"middle\" />\n              <List.Content>\n                <List.Header>\n                  <Link to={router.route.jsonFormatter.path}>JSON format</Link>\n                </List.Header>\n                <List.Description>\n                  pretty-printing JSON. <a href=\"https://stackoverflow.com/questions/4810841/how-can-i-pretty-print-json-using-javascript\" target=\"_blank\">stackoverflow.com <Icon name=\"external\" size=\"small\" /></a>\n                </List.Description>\n              </List.Content>\n            </List.Item>\n            <List.Item>\n              <List.Icon name=\"qrcode\" size=\"large\" verticalAlign=\"middle\" />\n              <List.Content>\n                <List.Header>\n                  <Link to={router.route.qrcode.path}>QRCode</Link>\n                </List.Header>\n                <List.Description>\n                  qr code generator. <a href=\"https://github.com/soldair/node-qrcode\" target=\"_blank\">soldair/node-qrcode <Icon name=\"external\" size=\"small\" /></a>\n                </List.Description>\n              </List.Content>\n            </List.Item>\n          </List>\n        </Segment>\n        <Header as=\"h2\">Others</Header>\n        <Segment basic={true}>\n          <List divided={true} size=\"large\">\n            <List.Item>\n              <List.Icon name=\"code\" size=\"large\" verticalAlign=\"middle\" />\n              <List.Content>\n                <List.Header>\n                  <a href=\"https://plantuml-editor.kkeisuke.com/\" target=\"_blank\">\n                    PlantUML Editor <Icon name=\"external\" />\n                  </a>\n                </List.Header>\n                <List.Description>\n                  PlantUML online demo client\n                </List.Description>\n              </List.Content>\n            </List.Item>\n          </List>\n        </Segment>\n        <Header as=\"h2\" dividing={true}>GitHub</Header>\n        <Segment basic={true}>\n          <List size=\"large\">\n            <List.Item>\n              <List.Icon name=\"github\" size=\"large\" />\n              <List.Content verticalAlign=\"middle\">\n                <a href=\"https://github.com/kkeisuke/utility\" target=\"_blank\">https://github.com/kkeisuke/utility <Icon name=\"external\" size=\"small\" /></a>\n              </List.Content>\n            </List.Item>\n          </List>\n        </Segment>\n      </Segment>\n    );\n  }\n}\n\nexport default Top;\n","// 型定義のため\nimport SqlFormatterStore from '../../stores/SqlFormatterStore';\nimport SqlCodeMirrorStore from '../../stores/SqlCodeMirrorStore';\n\nimport * as React from 'react';\nimport {\n  inject,\n  observer,\n} from 'mobx-react';\nimport {\n  Header,\n  Segment,\n  Form,\n  Icon,\n} from 'semantic-ui-react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\n\nimport './SqlFormatter.css';\n\ninterface Iprops {\n  sqlFormatter: SqlFormatterStore;\n  sqlCodeMirror: SqlCodeMirrorStore;\n}\n\n@inject('sqlFormatter')\n@inject('sqlCodeMirror')\n@observer\nclass SqlFormatter extends React.Component {\n  render() {\n    const {\n      sqlFormatter,\n      sqlCodeMirror,\n    } = this.props as Iprops;\n\n    return (\n      <Segment basic={true}>\n        <Header as=\"h1\" dividing={true}>\n          <Icon name=\"code\" />SQL format\n        </Header>\n        <Form>\n          <Form.Group widths=\"equal\">\n            <Form.TextArea label=\"SQL\" value={sqlFormatter.text} placeholder=\"paste unformatted SQL\" onChange={sqlFormatter.format} />\n          </Form.Group>\n          <Form.Group>\n            <Form.Select label=\"mode\" options={sqlCodeMirror.modes} value={sqlCodeMirror.options.mode} onChange={sqlCodeMirror.setOptions} />\n          </Form.Group>\n        </Form>\n        <CodeMirror value={sqlFormatter.sql} onBeforeChange={sqlFormatter.changeSql} options={sqlCodeMirror.options} />\n      </Segment>\n    );\n  }\n}\n\nexport default SqlFormatter;\n","// 型定義のため\nimport JsonFormatterStore from '../../stores/JsonFormatterStore';\nimport JsonCodeMirrorStore from '../../stores/JsonCodeMirrorStore';\nimport {\n  DropdownProps,\n} from 'semantic-ui-react';\n\nimport * as React from 'react';\nimport {\n  inject,\n  observer,\n} from 'mobx-react';\nimport {\n  Header,\n  Segment,\n  Form,\n  Icon,\n} from 'semantic-ui-react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\n\nimport './JsonFormatter.css';\n\ninterface Iprops {\n  jsonFormatter: JsonFormatterStore;\n  jsonCodeMirror: JsonCodeMirrorStore;\n}\n\n@inject('jsonFormatter')\n@inject('jsonCodeMirror')\n@observer\nclass JsonFormatter extends React.Component<Iprops> {\n\n  indentChange = (e: React.SyntheticEvent<HTMLElement>, props: DropdownProps) => {\n    this.props.jsonFormatter.setIndent(e, props);\n    this.props.jsonCodeMirror.setIndent(e, props);\n  }\n\n  render() {\n    const {\n      jsonFormatter,\n      jsonCodeMirror,\n    } = this.props as Iprops;\n\n    return (\n      <Segment basic={true}>\n        <Header as=\"h1\" dividing={true}>\n          <Icon name=\"code\" />JSON format\n        </Header>\n        <Form>\n          <Form.Group widths=\"equal\">\n            <Form.TextArea label=\"JSON\" value={jsonFormatter.text} placeholder=\"paste unformatted JSON\" onChange={jsonFormatter.format} />\n          </Form.Group>\n          <Form.Group>\n            <Form.Select label=\"indent\" options={jsonFormatter.indents} value={jsonFormatter.indent} onChange={this.indentChange} />\n          </Form.Group>\n        </Form>\n        <CodeMirror value={jsonFormatter.json} onBeforeChange={jsonFormatter.changeJson} options={jsonCodeMirror.options} />\n      </Segment>\n    );\n  }\n}\n\nexport default JsonFormatter;\n","// 型定義のため\nimport QrcodeStore from '../../stores/QrcodeStore';\n\nimport * as React from 'react';\nimport {\n  inject,\n  observer,\n} from 'mobx-react';\nimport {\n  Header,\n  Segment,\n  Form,\n  Icon,\n  Button,\n  Divider,\n  Message,\n} from 'semantic-ui-react';\n\nimport './Qrcode.css';\n\ninterface Iprops {\n  qrcode: QrcodeStore;\n}\n\n@inject('qrcode')\n@observer\nclass Qrcode extends React.Component<Iprops> {\n\n  componentDidMount() {\n    const {\n      qrcode,\n    } = this.props as Iprops;\n\n    qrcode.setFile(document.getElementById('file') as HTMLInputElement);\n    qrcode.setCanvas(document.getElementById('canvas') as HTMLCanvasElement);\n    qrcode.toCanvas();\n    qrcode.addFileReadEventListener();\n  }\n\n  clickFile = () => {\n    if (this.props.qrcode.file) {\n      this.props.qrcode.file.click();\n    }\n  }\n\n  render() {\n    const {\n      qrcode,\n    } = this.props as Iprops;\n\n    return (\n      <Segment basic={true}>\n        <Header as=\"h1\" dividing={true}>\n          <Icon name=\"qrcode\" />QRCode\n        </Header>\n        <Message warning={true} compact={true} size=\"small\">\n          <p>Recommended browsers are Chrome and Safari</p>\n        </Message>\n        <Form>\n          <Form.Group>\n            <Form.Input label=\"text\" value={qrcode.text} onChange={qrcode.changeText} width={8} />\n          </Form.Group>\n          <Form.Group>\n            <Form.Input label=\"width\" value={qrcode.width} type=\"number\" min={qrcode.widthMin} max={qrcode.widthMax} onChange={qrcode.changeWidth} width={2} />\n            <Form.Input label=\"margin\" value={qrcode.margin} type=\"number\" min={qrcode.marginMin} max={qrcode.marginMax} onChange={qrcode.changeMargin} width={2} />\n            <Form.Input label=\"color dark\" value={qrcode.dark} pattern={qrcode.colorPattern} onChange={qrcode.changeDark} width={2} />\n            <Form.Input label=\"color light\" value={qrcode.light} pattern={qrcode.colorPattern} onChange={qrcode.changeLight} width={2} />\n          </Form.Group>\n          <Divider hidden={true} />\n          <Form.Group inline={true}>\n            <Form.Input label=\"icon scale\" value={qrcode.iconScale} type=\"number\" step={qrcode.iconScaleStep} min={qrcode.iconScaleMin} max={qrcode.iconScaleMax} onChange={qrcode.changeIconScale} />\n            <Button type=\"button\" onClick={this.clickFile} primary={true}>add icon</Button>　{qrcode.uploadedFile ? qrcode.uploadedFile.name : ''} {qrcode.uploadedFile ? `( ${qrcode.uploadedFile.type} )` : ''}\n            <input type=\"file\" id=\"file\" />\n          </Form.Group>\n          <Divider hidden={true} />\n          <Form.Group inline={true}>\n            <Button.Group>\n              <Button type=\"button\" onClick={qrcode.resetAction}>Reset</Button>\n              <Button.Or />\n              <Button type=\"button\" positive={true} onClick={qrcode.toCanvas} disabled={!Boolean(qrcode.text)} >Create</Button>\n            </Button.Group>\n          </Form.Group>\n        </Form>\n        <Divider hidden={true} />\n        <Segment compact={true}>\n          <canvas id=\"canvas\" />\n        </Segment>\n      </Segment>\n    );\n  }\n}\n\nexport default Qrcode;\n","import * as React from 'react';\nimport {\n  Header,\n  Segment,\n} from 'semantic-ui-react';\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <Segment basic={true}>\n        <Header as=\"h1\" dividing={true}>Not Found</Header>\n      </Segment>\n    );\n  }\n}\n\nexport default NotFound;\n","// 型定義のため\nimport RoutesStore from '../../stores/RouterStore';\n\nimport * as React from 'react';\nimport {\n  Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport {\n  inject,\n  observer,\n} from 'mobx-react';\n\nimport Sidebar from '../Sidebar/Sidebar';\nimport Footer from '../Footer/Footer';\nimport Top from '../Top/Top';\nimport SqlFormatter from '../SqlFormatter/SqlFormatter';\nimport JsonFormatter from '../JsonFormatter/JsonFormatter';\nimport Qrcode from '../Qrcode/Qrcode';\nimport NotFound from './NotFound';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/solarized.css';\nimport 'codemirror/mode/sql/sql.js';\nimport 'codemirror/mode/javascript/javascript.js';\nimport './App.css';\n\ninterface Iprops {\n  router: RoutesStore;\n}\n\n@inject('router')\n@observer\nclass App extends React.Component {\n  render() {\n    const {\n      router\n    } = this.props as Iprops;\n\n    return (\n      <Router history={router.history}>\n        <div className=\"App\">\n          <Sidebar />\n          <div className=\"main\">\n            <Switch>\n              <Route exact={true} path=\"/\" component={Top}/>\n              <Route path=\"/sql_formatter\" component={SqlFormatter}/>\n              <Route path=\"/json_formatter\" component={JsonFormatter}/>\n              <Route path=\"/qrcode\" component={Qrcode}/>\n              <Route component={NotFound}/>\n            </Switch>\n            <Footer />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// 型定義のため\nimport { MenuItemProps } from 'semantic-ui-react';\nimport { Location } from 'history';\n\nimport {\n  // observable,\n  // computed,\n  action,\n} from 'mobx';\nimport { createBrowserHistory } from 'history';\n\nexport default class RouterStore {\n  history = createBrowserHistory();\n  route: { [ key: string ]: { path: string; title: string } } = {\n    top: {\n      path: '/',\n      title: 'Utility'\n    },\n    sqlFormatter: {\n      path: '/sql_formatter',\n      title: 'SQL format : Utility'\n    },\n    jsonFormatter: {\n      path: '/json_formatter',\n      title: 'JSON format : Utility'\n    },\n    qrcode: {\n      path: '/qrcode',\n      title: 'QRCode : Utility'\n    }\n  };\n\n  constructor() {\n    this.changeTitle(this.history.location);\n    this.history.listen((location: Location) => {\n      this.changeTitle(location);\n    });\n  }\n\n  changeTitle(location: Location) {\n    for (const route in this.route) {\n      if (this.route.hasOwnProperty(route) && this.route[route].path === location.pathname) {\n        document.title = this.route[route].title;\n      }\n    }\n  }\n\n  @action.bound isActive(path: string): boolean {\n    return location.pathname === path;\n  }\n\n  @action.bound goTo(event: React.MouseEvent<HTMLElement>, {name}: MenuItemProps) {\n    this.history.push(String(name));\n  }\n}\n","// 型定義のため\nimport * as codemirror from 'codemirror';\nimport {\n  TextAreaProps,\n} from 'semantic-ui-react';\n\nimport {\n  observable,\n  // computed,\n  action,\n} from 'mobx';\nimport sqlFormatter from 'sql-formatter';\n\nexport default class SqlFormatterStore {\n  defaultText: string = '\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n';\n\n  @observable text: string = '';\n  @observable sql: string = '';\n\n  localStorageKey: string = 'sqlFormatterStore.text';\n\n  constructor() {\n    const text: string = this.getText();\n    if (text) {\n      this.setText(text);\n      this.setSql(this.sqlFormat(text));\n    } else {\n      this.setSql(this.defaultText);\n    }\n  }\n\n  getText(): string {\n    let text: string = '';\n    if (window.localStorage && window.localStorage.getItem(this.localStorageKey) !== null ) {\n      text = String(window.localStorage.getItem(this.localStorageKey));\n    }\n    return text;\n  }\n\n  setText(text: string) {\n    this.text = text;\n  }\n\n  setlocalStorage(text: string) {\n    if (window.localStorage) {\n      window.localStorage.setItem(this.localStorageKey, text);\n    }\n  }\n\n  setSql(text: string) {\n    this.sql = text || this.defaultText;\n  }\n\n  sqlFormat(text: string): string {\n    return sqlFormatter.format(text).split(';').join('\\n;\\n');\n  }\n\n  @action.bound format(e: React.FormEvent<HTMLTextAreaElement>, {value}: TextAreaProps) {\n    this.setText(String(value));\n    this.setlocalStorage(String(value));\n    this.setSql(this.sqlFormat(String(value)));\n  }\n\n  @action.bound changeSql(editor: codemirror.Editor, data: codemirror.EditorChange, value: string) {\n    this.setSql(value);\n  }\n}\n","// 型定義のため\nimport {\n  DropdownProps,\n  DropdownItemProps,\n} from 'semantic-ui-react';\nimport * as codemirror from 'codemirror';\n\nimport {\n  observable,\n  action,\n} from 'mobx';\n\nexport default class SqlCodeMirrorStore {\n  @observable options: codemirror.EditorConfiguration = {\n    lineNumbers: true,\n    mode: 'text/x-sql',\n    theme: 'solarized dark',\n  };\n\n  modes: DropdownItemProps[] = [\n    {\n      key: 'sql',\n      text: 'text/x-sql',\n      value: 'text/x-sql',\n    },\n    {\n      key: 'mysql',\n      text: 'text/x-mysql',\n      value: 'text/x-mysql',\n    },\n    {\n      key: 'mssql',\n      text: 'text/x-mssql',\n      value: 'text/x-mssql',\n    },\n    {\n      key: 'pgsql',\n      text: 'text/x-pgsql',\n      value: 'text/x-pgsql',\n    },\n  ];\n\n  localStorageKey: string = 'sqlCodeMirrorStore.options.mode';\n\n  constructor() {\n    const mode: string = this.getMode();\n    if (mode) {\n      this.setMode(mode);\n    }\n  }\n\n  getMode(): string {\n    let mode: string = '';\n    if (window.localStorage && window.localStorage.getItem(this.localStorageKey) !== null ) {\n      mode = String(window.localStorage.getItem(this.localStorageKey));\n    }\n    return mode;\n  }\n\n  setMode(value: string) {\n    this.options.mode = value;\n  }\n\n  setlocalStorage(value: string) {\n    if (window.localStorage) {\n      window.localStorage.setItem(this.localStorageKey, value);\n    }\n  }\n\n  @action.bound setOptions(e: React.SyntheticEvent<HTMLElement>, {value}: DropdownProps) {\n    this.setMode(String(value));\n    this.setlocalStorage(String(value));\n  }\n}\n","// 型定義のため\nimport * as codemirror from 'codemirror';\nimport {\n  DropdownProps,\n  TextAreaProps,\n  DropdownItemProps,\n} from 'semantic-ui-react';\n\nimport {\n  observable,\n  // computed,\n  action,\n} from 'mobx';\n\nexport default class JsonFormatterStore {\n  defaultText: string = '\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n';\n\n  @observable indent: string = '2'; // '\\t'\n  @observable text: string = '';\n  @observable json: string = '';\n\n  indents: DropdownItemProps[] = [\n    {\n      key: 'space2',\n      text: 'space 2',\n      value: '2',\n    },\n    {\n      key: 'space4',\n      text: 'space 4',\n      value: '4',\n    },\n    {\n      key: 'tab',\n      text: 'tab',\n      value: '\\t',\n    },\n  ];\n\n  localStorageKeyForIndet: string = 'jsonFormatterStore.indent';\n  localStorageKeyForText: string = 'jsonFormatterStore.text';\n\n  constructor() {\n    const indent: string = this.getIndent();\n    const text: string = this.getText();\n    if (indent) {\n      this._setIndent(indent);\n    }\n    if (text) {\n      this.setText(text);\n      this.setJson(this.stringify(text));\n    } else {\n      this.setJson(this.defaultText);\n    }\n  }\n\n  getText(): string {\n    let text: string = '';\n    if (window.localStorage && window.localStorage.getItem(this.localStorageKeyForText) !== null ) {\n      text = String(window.localStorage.getItem(this.localStorageKeyForText));\n    }\n    return text;\n  }\n\n  setText(text: string) {\n    this.text = text;\n  }\n\n  setTextlocalStorage(text: string) {\n    if (window.localStorage) {\n      window.localStorage.setItem(this.localStorageKeyForText, text);\n    }\n  }\n\n  setJson(text: string) {\n    this.json = text || this.defaultText;\n  }\n\n  getIndent(): string {\n    let indent: string = '';\n    if (window.localStorage && window.localStorage.getItem(this.localStorageKeyForIndet) !== null ) {\n      indent = String(window.localStorage.getItem(this.localStorageKeyForIndet));\n    }\n    return indent;\n  }\n\n  _setIndent(value: string) {\n    this.indent = value;\n  }\n\n  setIndentlocalStorage(text: string) {\n    if (window.localStorage) {\n      window.localStorage.setItem(this.localStorageKeyForIndet, text);\n    }\n  }\n\n  stringify(json: string) {\n    let isParsed: boolean = false;\n    let parsed: string = '';\n    try {\n      if (json) {\n        parsed = JSON.parse(json);\n        isParsed = parsed ? true : false;\n      }\n    } catch (e) {\n      parsed = `${e.name} : ${e.message}`;\n    }\n    return isParsed ? JSON.stringify(parsed, null, this.castIndent()) : parsed;\n  }\n\n  castIndent(): number|string {\n    return Number(this.indent) > 0 ? Number(this.indent) : this.indent;\n  }\n\n  @action.bound format(e: React.FormEvent<HTMLTextAreaElement>, {value}: TextAreaProps) {\n    this.setText(String(value));\n    this.setTextlocalStorage(String(value));\n    this.setJson(this.stringify(String(value)));\n  }\n\n  @action.bound setIndent(e: React.SyntheticEvent<HTMLElement>, {value}: DropdownProps) {\n    this._setIndent(String(value));\n    this.setIndentlocalStorage(String(value));\n    this.setJson(this.stringify(this.text));\n  }\n\n  @action.bound changeJson(editor: codemirror.Editor, data: codemirror.EditorChange, value: string) {\n    this.setJson(value);\n  }\n}\n","// 型定義のため\nimport * as codemirror from 'codemirror';\nimport {\n  DropdownProps,\n} from 'semantic-ui-react';\n\nimport {\n  observable,\n  action,\n} from 'mobx';\n\nexport default class JsonCodeMirrorStore {\n  @observable options: codemirror.EditorConfiguration = {\n    lineNumbers: true,\n    mode: 'application/ld+json',\n    theme: 'solarized dark',\n    indentUnit: 2,\n    indentWithTabs: false\n  };\n\n  setIndentUnit(value: number) {\n    // タブの場合は４\n    this.options.indentUnit = value > 0 ? value : 4;\n  }\n\n  setIndentWithTabs(value: number) {\n    // タブ = true, 2, 4 = false\n    this.options.indentWithTabs = !(value > 0);\n  }\n\n  @action.bound setIndent(e: React.SyntheticEvent<HTMLElement>, {value}: DropdownProps) {\n    this.setIndentUnit(Number(value));\n    this.setIndentWithTabs(Number(value));\n  }\n}\n","// 型定義のため\nimport { InputOnChangeData } from 'semantic-ui-react';\n\nimport {\n  observable,\n  action,\n} from 'mobx';\n\nimport QRCode from 'qrcode';\nimport toSJIS from 'qrcode/helper/to-sjis';\n\n/**\n * @TODO https://stackoverflow.com/questions/17861447/html5-canvas-drawimage-how-to-apply-antialiasing\n * context.imageSmoothingQuality = \"low|medium|high\"\n * \"It's currently only supported in Chrome.\"\n */\ninterface ChromeCanvasRenderingContext2D extends CanvasRenderingContext2D {\n  ImageSmoothingQuality: string;\n}\n\nexport default class QrcodeStore {\n  @observable text: string = '';\n  @observable width: number = 0;\n  @observable margin: number = 0;\n  @observable marginMin: number = 0;\n  @observable marginMax: number = 100;\n  @observable widthMin: number = 0;\n  @observable widthMax: number = 2000;\n  @observable dark: string = '';\n  @observable light: string = '';\n  @observable colorPattern: string = '^[0-9A-Fa-f]{3,}$';\n\n  @observable file?: HTMLInputElement;\n  @observable canvas?: HTMLCanvasElement;\n  @observable context?: ChromeCanvasRenderingContext2D;\n  @observable icon?: HTMLImageElement;\n  @observable uploadedFile?: File | null;\n  @observable iconScale: number = 0;\n  @observable iconScaleStep: number = 0.01;\n  @observable iconScaleMin: number = 0.1;\n  @observable iconScaleMax: number = 1;\n\n  textDefault: string = 'sample';\n  widthDefault: number = 200;\n  marginDefault: number = 0;\n  darkDefault: string = '000000FF';\n  lightDefault: string = 'FFFFFF00';\n  iconScaleDefault: number = 0.25;\n\n  deleteMessage: string = 'Can I reset it?';\n\n  constructor() {\n    this.reset();\n  }\n\n  setText(text: string) {\n    this.text = text;\n  }\n\n  setWidth(width: number) {\n    this.width = width;\n  }\n\n  getWidth(): number {\n    return this.width <= this.widthMax ? this.width || this.widthDefault : this.widthMax;\n  }\n\n  setMargin(margin: number) {\n    this.margin = margin;\n  }\n\n  getMargin(): number {\n    return this.margin <= this.marginMax ? this.margin || this.marginDefault : this.marginMax;\n  }\n\n  setDark(dark: string) {\n    this.dark = dark;\n  }\n\n  getDarkColor(): string {\n    return `#${this.isHexadecimal(this.dark) ? this.dark : this.darkDefault}`;\n  }\n\n  setLight(light: string) {\n    this.light = light;\n  }\n\n  getLightColor(): string {\n    return `#${this.isHexadecimal(this.light) ? this.light : this.lightDefault}`;\n  }\n\n  setIconScale(iconScale: number) {\n    this.iconScale = iconScale;\n  }\n\n  getIconScale(): number {\n    return this.iconScale <= this.iconScaleMax ? this.iconScale || this.iconScaleDefault : this.iconScaleDefault;\n  }\n\n  isHexadecimal(color: string): boolean {\n    return color.length <= 8 && color.match(this.colorPattern) !== null && Number.parseInt(color, 16) <= 4294967295;\n  }\n\n  resetIcon () {\n    if (this.file) {\n      this.file.value = '';\n    }\n    this.uploadedFile = null;\n    this.icon = new Image();\n  }\n\n  reset() {\n    this.setText(this.textDefault);\n    this.setWidth(this.widthDefault);\n    this.setMargin(this.marginDefault);\n    this.setDark(this.darkDefault);\n    this.setLight(this.lightDefault);\n    this.setIconScale(this.iconScaleDefault);\n    this.resetIcon();\n  }\n\n  loadImg(uploadedFile: File) {\n    if (!this.icon) { return }\n    if (uploadedFile) {\n      this.uploadedFile = uploadedFile;\n      if (this.uploadedFile.type.indexOf('image/') === 0) {\n        this.icon.src = URL.createObjectURL(this.uploadedFile);\n      }\n    }\n  }\n\n  drawIcon() {\n    if (!this.icon || !this.canvas || !this.context) { return }\n\n    let dw: number;\n    let dh: number;\n    const iconScale: number = this.getIconScale();\n\n    if (this.icon.width > this.canvas.width * iconScale) {\n      dw = this.canvas.width * iconScale;\n    } else {\n      dw = this.icon.width;\n    }\n\n    if (this.icon.height > this.canvas.height * iconScale) {\n      dh = this.canvas.height * iconScale;\n    } else {\n      dh = this.icon.height;\n    }\n\n    const x: number = Math.ceil((this.canvas.width - dw) / 2);\n    const y: number = Math.ceil((this.canvas.height - dh) / 2);\n\n    if ('imageSmoothingQuality' in this.context) {\n      this.context.imageSmoothingQuality = 'high';\n    }\n\n    this.context.drawImage(this.icon, x, y, dw, dh);\n  }\n\n  @action.bound toCanvas() {\n    if (this.canvas) {\n      QRCode.toCanvas(this.canvas, this.text || this.textDefault, {\n        width: this.getWidth(),\n        margin: this.getMargin(),\n        toSJISFunc: toSJIS,\n        color: {\n          dark: this.getDarkColor(),\n          light: this.getLightColor(),\n        }\n      });\n      if (this.icon && this.icon.src) {\n        this.drawIcon();\n      }\n    }\n\n  }\n\n  @action.bound changeText(e: React.SyntheticEvent<HTMLInputElement>, data: InputOnChangeData) {\n    this.setText(String(data.value));\n  }\n\n  @action.bound changeWidth(e: React.SyntheticEvent<HTMLInputElement>, data: InputOnChangeData) {\n    this.setWidth(Number(data.value));\n  }\n\n  @action.bound changeMargin(e: React.SyntheticEvent<HTMLInputElement>, data: InputOnChangeData) {\n    this.setMargin(Number(data.value));\n  }\n\n  @action.bound changeDark(e: React.SyntheticEvent<HTMLInputElement>, data: InputOnChangeData) {\n    this.setDark(String(data.value));\n  }\n\n  @action.bound changeLight(e: React.SyntheticEvent<HTMLInputElement>, data: InputOnChangeData) {\n    this.setLight(String(data.value));\n  }\n\n  @action.bound changeIconScale(e: React.SyntheticEvent<HTMLInputElement>, data: InputOnChangeData) {\n    this.setIconScale(Number(data.value));\n  }\n\n  @action.bound setFile(file: HTMLInputElement) {\n    if (file) {\n      this.file = file;\n    }\n  }\n\n  @action.bound setCanvas(canvas: HTMLCanvasElement) {\n    if (canvas) {\n      this.canvas = canvas;\n      const context = this.canvas.getContext('2d') as ChromeCanvasRenderingContext2D;\n      if (context) {\n        this.context = context;\n      }\n    }\n  }\n\n  @action.bound addFileReadEventListener() {\n    if (this.file) {\n      this.file.addEventListener('change', (e: Event) => {\n        const target = e.target as HTMLInputElement;\n        if (target.files && target.files.length) {\n          this.loadImg(target.files[0]);\n        }\n      }, false);\n    }\n  }\n\n  @action.bound resetAction() {\n    if (window.confirm(this.deleteMessage)) {\n      this.reset();\n      this.toCanvas();\n    }\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nimport RouterStore from './stores/RouterStore';\nimport SqlFormatterStore from './stores/SqlFormatterStore';\nimport SqlCodeMirrorStore from './stores/SqlCodeMirrorStore';\nimport JsonFormatterStore from './stores/JsonFormatterStore';\nimport JsonCodeMirrorStore from './stores/JsonCodeMirrorStore';\nimport QrcodeStore from './stores/QrcodeStore';\n\nconst stores = {\n  router: new RouterStore(),\n  sqlFormatter: new SqlFormatterStore(),\n  sqlCodeMirror: new SqlCodeMirrorStore(),\n  jsonFormatter: new JsonFormatterStore(),\n  jsonCodeMirror: new JsonCodeMirrorStore(),\n  qrcode: new QrcodeStore(),\n};\n\nReactDOM.render(\n  <Provider {...stores}>\n    <App />\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}